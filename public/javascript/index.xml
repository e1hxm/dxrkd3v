<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on El&#39;ham</title>
    <link>http://localhost:1313/javascript/</link>
    <description>Recent content in Javascript on El&#39;ham</description>
    <generator>Hugo</generator>
    <language>ru</language>
    <lastBuildDate>Tue, 11 Mar 2025 12:53:24 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Замыкания в JavaScript</title>
      <link>http://localhost:1313/zamyekaniya_v_javascript/</link>
      <pubDate>Tue, 11 Mar 2025 12:53:24 +0300</pubDate>
      <guid>http://localhost:1313/zamyekaniya_v_javascript/</guid>
      <description>&lt;p&gt;Сегодня разберем, использование замыканий&#xA;в JavaScript.&lt;/p&gt;&#xA;&lt;p&gt;Возьмем небольщой кусок кода, который&#xA;уже попадался в этом курсе&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;logNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;logNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Нужно помнить что JavaScript выполнит этот код&#xA;с помощью интерпритатора последовательно, строка&#xA;за строкой.&lt;/p&gt;&#xA;&lt;p&gt;На строчке &lt;code&gt;let number = 5&lt;/code&gt; тип данных изначально&#xA;будет &lt;code&gt;undefined&lt;/code&gt; мы туда помещаем значение &lt;code&gt;5&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Дальше интерпритатор натыкается на создание функции.&lt;/p&gt;&#xA;&lt;p&gt;Переменная logNumber&lt;/p&gt;</description>
    </item>
    <item>
      <title>Динамическая типизация в Javascript</title>
      <link>http://localhost:1313/dinamicheskaya_tipizasia_v_javascrit/</link>
      <pubDate>Sun, 16 Feb 2025 12:55:24 +0300</pubDate>
      <guid>http://localhost:1313/dinamicheskaya_tipizasia_v_javascrit/</guid>
      <description>&lt;p&gt;Сегодня поговорим про динамическую типизацию в JavaScript.&lt;/p&gt;&#xA;&lt;p&gt;Динамическая типизация - это возможность одного типа данных&#xA;превращаться в другой. То есть, строка может стать числом,&#xA;число может стать строкой, объект тоже может стать строкой&#xA;и так далее.&lt;/p&gt;&#xA;&lt;p&gt;Так же стоит знать, что в других языках программирования&#xA;встречается статическая типизация данных, это&#xA;когда число всегда остается числом.&lt;/p&gt;&#xA;&lt;h3 id=&#34;tostring&#34;&gt;toString&lt;/h3&gt;&#xA;&lt;p&gt;Рассмотрим пример с превращением в строку &lt;code&gt;String&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Используем старый оператор, которым редко пользуются&#xA;в разработке &lt;code&gt;String&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Метод Object.create в JavaScript</title>
      <link>http://localhost:1313/object_create_v_javascript/</link>
      <pubDate>Sat, 15 Feb 2025 12:53:24 +0300</pubDate>
      <guid>http://localhost:1313/object_create_v_javascript/</guid>
      <description>&lt;p&gt;Метод &lt;code&gt;Object.create()&lt;/code&gt; в JavaScript используется для создания нового объекта с указанным прототипом. Это один из способов реализации прототипного наследования.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;girl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;sayHello&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;greet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;elle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;elle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sayHello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Теперь &lt;code&gt;elle&lt;/code&gt; наследует метод &lt;code&gt;sayHello&lt;/code&gt; от объекта &lt;code&gt;girl&lt;/code&gt;&#xA;и может говорить Hello&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Object.create()&lt;/code&gt; позволяет явно указать прототип для нового объекта, что полезно для реализации наследования.&lt;/p&gt;&#xA;&lt;p&gt;Если передать &lt;code&gt;null&lt;/code&gt; в качестве прототипа, объект не будет наследовать никаких свойств или методов даже базовых, таких как &lt;code&gt;toString&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Метод setPrototypeOf в JavaScript</title>
      <link>http://localhost:1313/setprototype_v_javascript/</link>
      <pubDate>Fri, 14 Feb 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/setprototype_v_javascript/</guid>
      <description>&lt;p&gt;Метод &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; в JavaScript позволяет динамически установить прототип &lt;code&gt;[[Prototype]]&lt;/code&gt; для указанного объекта. Это способ изменить прототип объекта после его создания.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setPrototypeOf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;prototype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Тут &lt;code&gt;obj&lt;/code&gt; это объект, прототип которого нужно установить&#xA;или изменить.&lt;/p&gt;&#xA;&lt;p&gt;А &lt;code&gt;prototype&lt;/code&gt; это новый прототип.&lt;/p&gt;&#xA;&lt;p&gt;Давайте разберем небольшой пример.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//Прототип&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;skillsOfGirls&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;intro&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`Привет, меня зовут &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;dance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt; танцует!`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//Новый объект&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;girl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Elle&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//Укажем прототип для girl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setPrototypeOf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;skillsOfGirls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//Обращаемся к методам и используем&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;intro&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Привет, меня зовут Elle&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Elle танцует&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Здесь объект &lt;code&gt;girl&lt;/code&gt; получает доступ к методам &lt;code&gt;intro&lt;/code&gt; и &lt;code&gt;dance&lt;/code&gt;&#xA;через прототип &lt;code&gt;skillsOfGirls&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Гайд по NPM</title>
      <link>http://localhost:1313/npm/</link>
      <pubDate>Sat, 08 Feb 2025 12:00:24 +0300</pubDate>
      <guid>http://localhost:1313/npm/</guid>
      <description>&lt;p&gt;NPM (Node Package Manager) — это инструмент для управления пакетами в среде Node.js. Он позволяет устанавливать необходимые библиотеки, контролировать зависимости проекта, а также настраивать и редактировать его метаданные.&lt;/p&gt;&#xA;&lt;h3 id=&#34;загрузка-пакетов&#34;&gt;Загрузка пакетов&lt;/h3&gt;&#xA;&lt;p&gt;Пакеты в NPM — это упакованный программный код, который может представлять собой библиотеку, утилиту или полноценное приложение.&lt;/p&gt;&#xA;&lt;p&gt;Разработчики используют готовые пакеты, чтобы избежать лишних телодвижений — вместо того чтобы писать с нуля модули, которые уже существуют, они применяют уже созданные решения.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spread оператор в JavaScript</title>
      <link>http://localhost:1313/spread_v_javascript/</link>
      <pubDate>Fri, 07 Feb 2025 12:00:24 +0300</pubDate>
      <guid>http://localhost:1313/spread_v_javascript/</guid>
      <description>&lt;p&gt;Spread operator, который выглядит следующим образом &lt;code&gt;(...)&lt;/code&gt; — это инструмент в JavaScript, который позволяет &amp;ldquo;разворачивать&amp;rdquo; элементы массивов или свойства объектов.&lt;/p&gt;&#xA;&lt;p&gt;Spread operator обозначается тремя точками &lt;code&gt;(...)&lt;/code&gt;. Его основная задача — &amp;ldquo;развернуть&amp;rdquo; элементы массива или свойства объекта, чтобы их можно было использовать в других контекстах. Например, он позволяет легко копировать массивы, объединять объекты, передавать элементы массива в функцию и многое другое.&lt;/p&gt;&#xA;&lt;p&gt;Spread Operator очень часто используется с массивами.&#xA;Разберем пример с клонированием массива. Эта возможность&#xA;очень полезна когда нужно избежать изминений&#xA;исходного массива&lt;/p&gt;</description>
    </item>
    <item>
      <title>Методы массивов в JavaScript</title>
      <link>http://localhost:1313/method_of_arrays_javascript/</link>
      <pubDate>Thu, 30 Jan 2025 18:55:24 +0300</pubDate>
      <guid>http://localhost:1313/method_of_arrays_javascript/</guid>
      <description>&lt;p&gt;Все методы и свойства которые содержат массивы&#xA;можно найти в документации.&lt;/p&gt;&#xA;&lt;p&gt;Либо можно вывести в консоль все методы при помощи&#xA;команды &lt;code&gt;console.dir&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Сегодня мы познакомимся с самыми часто используемыми&#xA;методами массивов.&lt;/p&gt;&#xA;&lt;p&gt;Для этого создадим простой массив для эксперементов.&#xA;Сначала это будет набор простых чисел.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Часто при работе с массивами приходится его редактировать.&#xA;Мы либо хотим что то добавить или удалить.&lt;/p&gt;&#xA;&lt;p&gt;Для этого существует методы как для редактирования&#xA;начала массива или его последнего значения.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Деструктуризация объектов в Javascript</title>
      <link>http://localhost:1313/destructurisazia_objectov_javascript/</link>
      <pubDate>Sat, 25 Jan 2025 12:55:24 +0300</pubDate>
      <guid>http://localhost:1313/destructurisazia_objectov_javascript/</guid>
      <description>&lt;p&gt;Деструктуризация объектов — это удобный способ извлечения данных из объектов в JavaScript. Она позволяет &amp;ldquo;разбирать&amp;rdquo; объект на отдельные переменные, что делает код более читаемым и компактным.&lt;/p&gt;&#xA;&lt;p&gt;Объекты в Javascript - это так называемые ассоциативные&#xA;массивы, они схожи с объектами в других языках,&#xA;например таких как &lt;code&gt;PHP&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Небольшой пример для эксперементов с объектами&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Elle&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;hobbies&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;film&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Crank&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;music&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;DVRST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#39;Elle&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Удалить свойство из объекта можно с помощью метода &lt;code&gt;delete&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Массивы и псевдомассивы в Javascript</title>
      <link>http://localhost:1313/pseudo_array_javascript/</link>
      <pubDate>Sat, 25 Jan 2025 12:53:24 +0300</pubDate>
      <guid>http://localhost:1313/pseudo_array_javascript/</guid>
      <description>&lt;p&gt;Сегодня пройдет лекция про массивы и псевдомассивы.&lt;/p&gt;&#xA;&lt;p&gt;А так про основные методы работы с ними.&lt;/p&gt;&#xA;&lt;p&gt;Массивы и псевдомассивы — это две разные, но похожие структуры данных в JavaScript.&lt;/p&gt;&#xA;&lt;p&gt;Массивы — это встроенный тип данных в JavaScript, предназначенный для хранения упорядоченных коллекций элементов. Они имеют множество полезных методов для работы с данными.&lt;/p&gt;&#xA;&lt;p&gt;Пример простого массива&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Выведет: 5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Выведет: 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Добавляем элемент в конец&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Выведет: [1, 2, 3, 4, 5, 6]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Особенности массивов:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Callback функции в JavaScript</title>
      <link>http://localhost:1313/callback_function_javascript/</link>
      <pubDate>Wed, 22 Jan 2025 12:55:24 +0300</pubDate>
      <guid>http://localhost:1313/callback_function_javascript/</guid>
      <description>&lt;p&gt;Callback-функции в JavaScript — это функции, которые передаются в качестве аргументов другим функциям и выполняются после завершения определенной операции или события. Они широко используются в асинхронном программировании, обработке событий и функциональном программировании.&lt;/p&gt;&#xA;&lt;p&gt;Пример передачи callback-функции в другую функцию как&#xA;аргумента и вызов внутри нее&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;greeting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;processUserInput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;prompt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Please enter your name.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;processUserInput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;greeting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// greeting — это callback-функция&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Callback-функции часто используются для обработки асинхронных операций, таких как запросы к серверу, чтение файлов или таймеры&lt;/p&gt;</description>
    </item>
    <item>
      <title>Методы строк и чисел в JavaScript</title>
      <link>http://localhost:1313/methods_of_str_and_numbers_javascript/</link>
      <pubDate>Thu, 16 Jan 2025 19:53:24 +0300</pubDate>
      <guid>http://localhost:1313/methods_of_str_and_numbers_javascript/</guid>
      <description>&lt;p&gt;Самые простые и часто используемые методы для строк и чисел в JavaScript.&#xA;Эти методы помогут выполнять базовые операции без сложностей.&lt;/p&gt;&#xA;&lt;h3 id=&#34;простые-методы-строк&#34;&gt;Простые методы строк&lt;/h3&gt;&#xA;&lt;h4 id=&#34;touppercase&#34;&gt;toUpperCase()&lt;/h4&gt;&#xA;&lt;p&gt;Преобразует строку в верхний регистр&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toUpperCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;HELLO&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;tolowercase&#34;&gt;toLowerCase()&lt;/h4&gt;&#xA;&lt;p&gt;Преобразует строку в нижний регистр&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;HELLO&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toLowerCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;hello&amp;#34; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;trim&#34;&gt;trim()&lt;/h4&gt;&#xA;&lt;p&gt;Удаляет пробелы с начала и конца строки&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;  Hello  &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;trim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;Hello&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;slicestart-end&#34;&gt;slice(start, end)&lt;/h4&gt;&#xA;&lt;p&gt;Возвращает часть строки от start до end (не включая end)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;Hello&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;replaceold-new&#34;&gt;replace(old, new)&lt;/h4&gt;&#xA;&lt;p&gt;Заменяет первое вхождение подстроки &lt;code&gt;old&lt;/code&gt; на &lt;code&gt;new&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойства строк и чисел в JavaScript</title>
      <link>http://localhost:1313/svoistva_v_javascript/</link>
      <pubDate>Thu, 16 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/svoistva_v_javascript/</guid>
      <description>&lt;p&gt;В JavaScript у строк и чисел есть свойства, которые предоставляют полезную информацию о них.&lt;/p&gt;&#xA;&lt;h4 id=&#34;свойства-строк&#34;&gt;Свойства строк&lt;/h4&gt;&#xA;&lt;p&gt;Строки в JavaScript имеют одно основное свойство &lt;code&gt;length&lt;/code&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Возвращает количество символов в строке&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Это свойство только для чтения (его нельзя изменить)&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, Elle!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p class=&#34;gray&#34;&gt;&#xD;&#xA;Синтаксис свойств строк и чисел в отличие от методов пишется &#xD;&#xA;без скобок в конце.&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;h4 id=&#34;свойства-чисел&#34;&gt;Свойства чисел&lt;/h4&gt;&#xA;&lt;p&gt;У чисел есть статические свойства, такие как &lt;code&gt;MAX_VALUE&lt;/code&gt;, &lt;code&gt;MIN_VALUE&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, &lt;code&gt;EPSILON&lt;/code&gt;, &lt;code&gt;MAX_SAFE_INTEGER&lt;/code&gt; и &lt;code&gt;MIN_SAFE_INTEGER&lt;/code&gt;, которые предоставляют информацию о числовых константах и ограничениях.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Оператор return в Javascript</title>
      <link>http://localhost:1313/return_javascript/</link>
      <pubDate>Wed, 15 Jan 2025 19:53:24 +0300</pubDate>
      <guid>http://localhost:1313/return_javascript/</guid>
      <description>&lt;p&gt;Оператор &lt;code&gt;return&lt;/code&gt; в JavaScript используется для возврата значения из функции. Когда интерпретатор встречает &lt;code&gt;return&lt;/code&gt;, выполнение функции прекращается, и управление возвращается туда, где функция была вызвана. Если после &lt;code&gt;return&lt;/code&gt; указано значение, оно возвращается как результат функции.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;return&lt;/code&gt; может вернуть любое значение: число, строку, объект, массив, другую функцию и даже &lt;code&gt;null&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Как только выполняется &lt;code&gt;return&lt;/code&gt;, функция сразу завершает свою работу. Код, который находится после &lt;code&gt;return&lt;/code&gt;, не выполняется.&lt;/p&gt;&#xA;&lt;p&gt;Если &lt;code&gt;return&lt;/code&gt; используется без значения, функция возвращает &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Аргументы в функциях JavaScript</title>
      <link>http://localhost:1313/argument_javascript/</link>
      <pubDate>Wed, 15 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/argument_javascript/</guid>
      <description>&lt;p&gt;В JavaScript аргументы — это значения, которые передаются в функцию при её вызове. Они позволяют функциям принимать данные и работать с ними. Аргументы могут быть любого типа: числа, строки, объекты, массивы, другие функции и т.д.&lt;/p&gt;&#xA;&lt;p&gt;В функциях в Javascript есть параметры и аргументы.&lt;/p&gt;&#xA;&lt;p&gt;Параметры функции - это переменные, указанные в определении функции. Они используются для работы с аргументами, переданными при вызове функции.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;greet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// name — параметр&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`Hello, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;!`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Аргументы функции - это значения, которые передаются в функцию при её вызове.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Function Expression в JavaScript</title>
      <link>http://localhost:1313/fuction_expression_javascript/</link>
      <pubDate>Tue, 14 Jan 2025 19:55:24 +0300</pubDate>
      <guid>http://localhost:1313/fuction_expression_javascript/</guid>
      <description>&lt;p&gt;Function Expression (функциональное выражение) — это способ создания функции в JavaScript, при котором функция определяется как часть выражения (например, присваивается переменной). В отличие от Function Declaration, Function Expression не поднимается (не hoisted) и может быть анонимной или именованной.&lt;/p&gt;&#xA;&lt;p&gt;Синтаксис Function Expression:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;имяПеременной&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;параметры&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// тело функции&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;function&lt;/code&gt; — ключевое слово для создания функции.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;имяПеременной&lt;/code&gt; — переменная, которой присваивается функция.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;параметры&lt;/code&gt; — аргументы, которые передаются в функцию (необязательно).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Function Declaration в JavaScript</title>
      <link>http://localhost:1313/function_declaration_javascript/</link>
      <pubDate>Tue, 14 Jan 2025 18:55:24 +0300</pubDate>
      <guid>http://localhost:1313/function_declaration_javascript/</guid>
      <description>&lt;p&gt;Function Declaration (объявление функции) — это один из способов создания функций в JavaScript.&lt;/p&gt;&#xA;&lt;p&gt;Синтаксис Function Declaration:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;имяФункции&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;параметры&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// тело функции&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;function&lt;/code&gt; — ключевое слово, которое указывает на объявление функции.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;имяФункции&lt;/code&gt; — имя функции, которое используется для её вызова.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;параметры&lt;/code&gt; — аргументы, которые передаются в функцию (необязательно).&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;тело функции&lt;/code&gt; — код, который выполняется при вызове функции.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Пример Function Declaration:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;greet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`Hello, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;!`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;greet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Elle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Hello, Elle!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Особенности Function Declaration:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Стрелочные функции в JavaScript</title>
      <link>http://localhost:1313/arrow_function_javascript/</link>
      <pubDate>Tue, 14 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/arrow_function_javascript/</guid>
      <description>&lt;p&gt;Стрелочные функции (Arrow Functions) — это компактный синтаксис для написания функций в JavaScript, представленный в стандарте ES6 (ECMAScript 2015). Они упрощают написание функций и имеют некоторые особенности в поведении по сравнению с обычными функциями.&lt;/p&gt;&#xA;&lt;p&gt;Базовый синтаксис:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;параметры&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// тело функции&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если функция состоит из одной строки, можно опустить фигурные скобки &lt;code&gt;{}&lt;/code&gt; и ключевое слово &lt;code&gt;return&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;параметры&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;выражение&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если параметр один, можно опустить круглые скобки &lt;code&gt;()&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;параметр&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;выражение&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если параметров нет, круглые скобки обязательны:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Циклы в JavaScript</title>
      <link>http://localhost:1313/loop_javascript/</link>
      <pubDate>Fri, 10 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/loop_javascript/</guid>
      <description>&lt;p&gt;При написании скриптов часто возникает необходимость выполнять однотипные действия многократно. Например, может потребоваться вывести все товары из списка по очереди или перебрать числа от 1 до 10, выполняя для каждого из них одинаковый код.&lt;/p&gt;&#xA;&lt;p&gt;Для таких случаев в программировании предусмотрены циклы. Циклы позволяют повторять определённый блок кода несколько раз, что делает код более компактным и удобным для работы с большими наборами данных или повторяющимися задачами.&lt;/p&gt;&#xA;&lt;h4 id=&#34;цикл-while&#34;&gt;Цикл While&lt;/h4&gt;&#xA;&lt;p&gt;Цикл &lt;code&gt;while&lt;/code&gt; — это способ организации повторяющихся действий в JavaScript. В отличие от цикла &lt;code&gt;for&lt;/code&gt;, где количество итераций обычно известно заранее, цикл while используется, когда нужно выполнять блок кода до тех пор, пока выполняется определённое условие.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Операторы сравнения в JavaScript</title>
      <link>http://localhost:1313/operatory_sravneniya/</link>
      <pubDate>Thu, 09 Jan 2025 19:53:24 +0300</pubDate>
      <guid>http://localhost:1313/operatory_sravneniya/</guid>
      <description>&lt;p&gt;Операторы сравнения в JavaScript используются для сравнения двух значений. Они возвращают логическое значение: true (истина) или false (ложь)&lt;/p&gt;&#xA;&lt;p&gt;Равно (==):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Проверяет, равны ли два значения с приведением типов.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Если типы разные, JavaScript попытается преобразовать их к одному типу перед сравнением.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Идет сравнение по значению, а не по типу данных.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// true&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;5&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// true (строка &amp;#39;5&amp;#39; преобразуется в число 5)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Не равно (!=):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Проверяет, не равны ли два значения с приведением типов.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Арифметические операторы в JavaScript</title>
      <link>http://localhost:1313/operators_in_javascript/</link>
      <pubDate>Thu, 09 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/operators_in_javascript/</guid>
      <description>&lt;h4 id=&#34;арифметические-операторы&#34;&gt;Арифметические операторы&lt;/h4&gt;&#xA;&lt;p&gt;Для выполнения математических операций:&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;+&lt;/code&gt; — сложение&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;-&lt;/code&gt; — вычитание&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;*&lt;/code&gt; — умножение&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;/&lt;/code&gt; — деление&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;%&lt;/code&gt; — остаток от деления&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;**&lt;/code&gt; — возведение в степень (ES6)&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;++&lt;/code&gt; — инкремент (увеличение на 1)&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;--&lt;/code&gt; — декремент (уменьшение на 1)&lt;/p&gt;&#xA;&lt;p class=&#39;gray&#39;&gt;&#xD;&#xA;Унарный плюс - это оператор, который используется для преобразования значения в число. &#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;Унарный плюс пытается преобразовать значение, стоящее после него, в числовой тип (number). Это полезно, когда нужно явно привести строку или другой тип данных к числу.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Интерполяция в JavaScript</title>
      <link>http://localhost:1313/interpolyasia/</link>
      <pubDate>Wed, 08 Jan 2025 19:53:24 +0300</pubDate>
      <guid>http://localhost:1313/interpolyasia/</guid>
      <description>&lt;p&gt;Интерполяция в JavaScript — это способ вставки значений переменных или выражений внутрь строки. В JavaScript для этого используются шаблонные строки (template literals), которые заключаются в обратные кавычки (`) вместо обычных одинарных или двойных кавычек.&lt;/p&gt;&#xA;&lt;p&gt;Обратные ковычки по другому назывются бектики.&lt;/p&gt;&#xA;&lt;p&gt;Для вставки значения переменной или выражения в строку&#xA;используется следующий синтаксис ${}&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;El&amp;#39;ham&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`Привет, меня зовут &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;, и мне &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt; лет.`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Ответ:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Привет, меня зовут El&amp;#39;ham, и мне 35 лет.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Для того чтобы использовать интерполяцию&#xA;обязательно использвать косые ковычки,&#xA;с одинарными ничего не сработает.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Метод document.write в JavaScript</title>
      <link>http://localhost:1313/method_document_write/</link>
      <pubDate>Wed, 08 Jan 2025 18:55:24 +0300</pubDate>
      <guid>http://localhost:1313/method_document_write/</guid>
      <description>&lt;p&gt;Метод &lt;code&gt;document.write&lt;/code&gt; – один из наиболее старых методов&#xA;добавления текста на страницу.&lt;/p&gt;&#xA;&lt;p&gt;Метод &lt;code&gt;document.write(str)&lt;/code&gt; функционирует исключительно в момент загрузки HTML-страницы. Он добавляет текст в текущее место HTML-документа до того, как браузер завершит формирование DOM-дерева.&lt;/p&gt;&#xA;&lt;p&gt;После рендера, HTML-документ будет содержать числа &lt;strong&gt;1 2 3&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Метод &lt;code&gt;document.write&lt;/code&gt; не накладывает ограничений на содержимое, которое может быть записано. Он просто добавляет строку в HTML-документ, как если бы она изначально была частью кода, без проверки корректности структуры тегов.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Оператор typeof() в JavaScript</title>
      <link>http://localhost:1313/typeof_javascript/</link>
      <pubDate>Wed, 08 Jan 2025 18:54:24 +0300</pubDate>
      <guid>http://localhost:1313/typeof_javascript/</guid>
      <description>&lt;p&gt;Оператор &lt;code&gt;typeof()&lt;/code&gt; возвращает тип данных аргумента.&lt;/p&gt;&#xA;&lt;p&gt;Полезная команда если нужно выяснить,&#xA;например какой тип данных возвращает&#xA;форма на сайте.&lt;/p&gt;&#xA;&lt;p&gt;У &lt;code&gt;typeof()&lt;/code&gt; существует два варианта синтаксиса:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Синтаксис оператора &lt;code&gt;typeof x&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Синтаксис функции &lt;code&gt;typeof(x)&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Оба синтаксиса работают одинаково.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;typeof()&lt;/code&gt; возвращает строку, которая содержит&#xA;тип данных.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;undefined&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;number&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;bigint&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;boolean&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;string&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Symbol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;symbol&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;object&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;object&amp;#34;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){}&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;function&amp;#34; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Нужно обратить внимание на &lt;code&gt;null&lt;/code&gt;, так как это не&#xA;объект а отдельный тип данных. Это официально признанная ошибка в языке.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Alert, Promt и Confirm в JavaScript</title>
      <link>http://localhost:1313/alert_promt_confirm_javascript/</link>
      <pubDate>Wed, 08 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/alert_promt_confirm_javascript/</guid>
      <description>&lt;p&gt;Простое взаимодействие сайта с пользователями через&#xA;команды &lt;code&gt;alert()&lt;/code&gt;, &lt;code&gt;promt()&lt;/code&gt; и &lt;code&gt;confirm()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Хотя данные команды не используются&#xA;в реальных проектах, все равно следует&#xA;изучить их.&lt;/p&gt;&#xA;&lt;p&gt;Все три команды напоминают работу&#xA;через &lt;code&gt;console log()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;alert&#34;&gt;Alert()&lt;/h4&gt;&#xA;&lt;p&gt;Синтаксис команды очень простой&#xA;и само действие тоже.&#xA;&lt;code&gt;alert()&lt;/code&gt; создает модальное окно на странице с текстом&#xA;который можно прописать заранее.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Hello, friends!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Вызванное модальное окно через &lt;code&gt;alert()&lt;/code&gt;&#xA;невозможно застилизовать.&lt;/p&gt;&#xA;&lt;p&gt;Команда &lt;code&gt;alert()&lt;/code&gt; используется, чтобы&#xA;предупредить пользователя о чем то очень важном.&#xA;Например, если пользователь начинает покидать&#xA;страницу, через модальное окно обычно&#xA;сообщается, что введенная им информация будет&#xA;потеряна если он закроет страницу.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Map в JavaScript</title>
      <link>http://localhost:1313/map_v_javascript/</link>
      <pubDate>Sat, 23 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/map_v_javascript/</guid>
      <description>&lt;p&gt;Task в RS School по JavaScript про Map&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Для работы со сложными структурами данных, такими как массивы и объкты, принято&#xD;&#xA;              использовать Map и Set&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Map — это коллекция, предназначенная для хранения данных любого типа в виде пар [ключ,&#xD;&#xA;              значение].&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Каждое значение сохраняется по уникальному ключу, который затем используется для&#xD;&#xA;              доступа к этому значению. При этом ключи также могут быть любого типа.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Методы и свойства Map&lt;/p&gt;&#xD;&#xA;            &lt;ul&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;new Map() &amp;rsaquo; создаёт коллекцию&lt;/p&gt;</description>
    </item>
    <item>
      <title>Set в JavaScript</title>
      <link>http://localhost:1313/set_v_javascript/</link>
      <pubDate>Sat, 23 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/set_v_javascript/</guid>
      <description>&lt;p&gt;Task в RS School по JavaScript про Set&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Объект Set — это уникальный тип коллекции, представляющий собой «множество» значений,&#xD;&#xA;              в котором каждое значение хранится только один раз и не имеет ключей.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Основные методы Set&lt;/p&gt;&#xD;&#xA;            &lt;ul&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;&#xD;&#xA;                  &#34;new Set(iterable)&#34; &amp;rsaquo; создаёт Set, и если в качестве аргумента был&#xD;&#xA;                  предоставлен итерируемый объект, обычно это [массив], то копирует его значения в&#xD;&#xA;                  новый Set.&#xD;&#xA;                &lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;&#xD;&#xA;                  &#34;set.add(value)&#34; &amp;rsaquo; Добавляет значение в множество (если оно уже&#xD;&#xA;                  присутствует, изменений не происходит) и возвращает сам объект Set.&#xD;&#xA;                &lt;/p&gt;</description>
    </item>
    <item>
      <title>Массивы в JavaScript</title>
      <link>http://localhost:1313/arrays_in_javascript/</link>
      <pubDate>Sun, 17 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/arrays_in_javascript/</guid>
      <description>&lt;p&gt;Task в RS School по JavaScript про Массивы&lt;/p&gt;&#xA;&lt;p&gt;Для хранения упорядоченных наборов&#xA;данных используется специальная структура,&#xA;называемая массивом (Array).&lt;/p&gt;&#xA;&lt;h3 id=&#34;создание-массива&#34;&gt;Создание массива&lt;/h3&gt;&#xA;&lt;p&gt;Для создания пустого массива можно&#xA;использовать два варианта синтаксиса:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Как правило, предпочтение&#xA;отдают второму варианту синтаксиса.&#xA;В квадратных скобках можно задать&#xA;начальные значения элементов:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Яблоко&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Апельсин&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Слива&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Нумерация элементов массива&#xA;начинается с нуля.&lt;/p&gt;&#xA;&lt;p&gt;Чтобы получить элемент,&#xA;нужно указать его индекс&#xA;в квадратных скобках:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Яблоко&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Апельсин&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Слива&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Яблоко&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Апельсин&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Слива&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Элемент массива можно&#xA;заменить следующим образом:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Объекты в JavaScript</title>
      <link>http://localhost:1313/objects_v_javascript/</link>
      <pubDate>Sun, 17 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/objects_v_javascript/</guid>
      <description>&lt;p&gt;Task в RS School по JavaScript про Объекты&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Объекты служат для хранения коллекций различных значений и более сложных сущностей. В&#xD;&#xA;              JavaScript объекты играют важную роль и являются одной из ключевых составляющих языка.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Объект можно создать с помощью фигурных скобок {…}, при этом список свойств является&#xD;&#xA;              необязательным.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Свойство объекта представляет собой пару «ключ: значение», где ключ — это строка (или&#xD;&#xA;              «имя свойства»), а значение может быть любым типом данных.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Пустой объект можно создать, применив один из двух вариантов синтаксиса:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Типы данных в JavaScript</title>
      <link>http://localhost:1313/tipy_dannyh_v_javascript/</link>
      <pubDate>Tue, 12 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/tipy_dannyh_v_javascript/</guid>
      <description>&lt;p&gt;Task в RS School по JavaScript&lt;/p&gt;&#xA;&lt;p&gt;В JavaScript каждое значение всегда относится к определенному типу данных, например&#xA;как строка или число.&lt;/p&gt;&#xA;&lt;p&gt;Существует всего 8 типов данных.&lt;/p&gt;&#xA;&lt;p&gt;Переменная может хранить в себе любой тип данных.&lt;/p&gt;&#xA;&lt;p&gt;В одном участке кода в переменной может храниться строка, а другой уже число.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;some&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Строка   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;some&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Число&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Из за такой особенности язык программирования JavaScript называется &amp;ldquo;динамически&#xA;типизированным&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Это означает, что хотя типы данных существуют, переменные не привязаны к какому-либо&#xA;конкретному типу.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Функции в JavaScript</title>
      <link>http://localhost:1313/function_javascript/</link>
      <pubDate>Mon, 11 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/function_javascript/</guid>
      <description>&lt;p&gt;Task в RS School по JavaScript про Функции&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Чтобы избежать повторения одного и того же кода в разных частях программы, были&#xD;&#xA;              созданы функции.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Функции служат основными &#34;кирпичиками&#34;, из которых строится программа.&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Вот несколько примеров встроенных функций:&lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;alert(msg);&#xD;&#xA;prompt(msg, default);&#xD;&#xA;confirm(question);&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;На самом деле, встроенных фукций в Javascript гораздо больше.&lt;/p&gt;&#xD;&#xA;            &lt;h3&gt;Объявление Функции&lt;/h3&gt;&#xD;&#xA;            &lt;p&gt;Для создания функции можно использовать конструкцию:&lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;function showMsg() {&#xD;&#xA;  console.log( &#39;Всем привет!&#39; );&#xD;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;В этом примере список аргументов пустой&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Сначала указывается ключевое слово &#39;function&#39;, затем имя функции, далее список&#xD;&#xA;              параметров в круглых скобках, разделенных запятыми и, наконец, код функции, также&#xD;&#xA;              известный как &#39;тело функции&#39;, заключенный в фигурные скобки.&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Переменные в JavaScript</title>
      <link>http://localhost:1313/peremennye_v_javascript/</link>
      <pubDate>Tue, 29 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/peremennye_v_javascript/</guid>
      <description>&lt;p&gt;Лекция с Udemy про переменые в JavaScript&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Переменные в JavaScript - это хранилище информации. Визуально их можно представить как&#xD;&#xA;              коробки, которые что то содержат внутри себя.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Чтобы объявить переменную существует сразу 3 способа.&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Две ключевые фразы let и const относятся к современной версии JavaScript.&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Так же есть ключевое слово var с помощью которого можно объявить переменную, но он&#xD;&#xA;              относится к устаревшей версии и использовать var не рекомендуется.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;h3&gt;let&lt;/h3&gt;&#xD;&#xA;            &lt;p&gt;Первый способ - через ключевое слово let&lt;/p&gt;</description>
    </item>
    <item>
      <title>Switch / Case в JavaScript</title>
      <link>http://localhost:1313/switch_case_v_javascript/</link>
      <pubDate>Sun, 05 May 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/switch_case_v_javascript/</guid>
      <description>&lt;p&gt;&#xD;&#xA;                            Лекция про оператор Switch / Case в JavaScript c Udemy&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Другие языки программирования, помимо условной конструкции if, &#xD;&#xA;                            поддерживают оператор switch. Это специализированная альтернатива if, &#xD;&#xA;                            предназначенная для определенных сценариев. &#xD;&#xA;                            Она полезна, когда необходима цепочка if else для проверки на равенство. Например:&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;pre&gt;&lt;code&gt;if (status === &#39;processing&#39;) {&#xD;&#xA;// Делаем раз&#xD;&#xA;} else if (status === &#39;paid&#39;) {&#xD;&#xA;// Делаем два&#xD;&#xA;} else if (status === &#39;new&#39;) {&#xD;&#xA;// Делаем три&#xD;&#xA;} else {&#xD;&#xA;// Делаем четыре&#xD;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Одна из особенностей этой сложной проверки заключается в том, &#xD;&#xA;                            что каждая ветка зависит от значения переменной status. &#xD;&#xA;                            Оператор switch позволяет более кратко и выразительно записать этот код: &#xD;&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Тернарный оператор в JavaScript</title>
      <link>http://localhost:1313/ternarny_operator_v_javascript/</link>
      <pubDate>Thu, 02 May 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/ternarny_operator_v_javascript/</guid>
      <description>&lt;p&gt;&#xD;&#xA;                            Лекция про тернарный оператор в JavaScript c Udemy&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Возьмем функцию которая возвращает модуль переданного числа&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;&lt;pre&gt;&lt;code&gt;const abs = (number) =&gt; {&#xD;&#xA;    if (number &gt;= 0) {&#xD;&#xA;        return number;&#xD;&#xA;    }&#xD;&#xA;return -number;&#xD;&#xA;};&#xD;&#xA;abs(10); // 10&#xD;&#xA;abs(-10); // 10&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Можно ли записать это более кратко? С использованием return &#34;ответ в зависимости от условия&#34;&#xD;&#xA;                            Для этого рядом с return должно быть выражение, но if это инструкция. &#xD;&#xA;                            В JavaScript есть выражение, аналогичное if-else, но при этом это выражение. Она называется тернарный оператор.&#xD;&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>if / else в JavaScript</title>
      <link>http://localhost:1313/if_else_v_javascript/</link>
      <pubDate>Mon, 25 Mar 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/if_else_v_javascript/</guid>
      <description>&lt;p&gt;Лекция про условные операторы в Udemy&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Конструкции условий дают возможность изменить ход работы программы в зависимости от&#xD;&#xA;              условий, которые проверяются. Благодаря им мы можем создавать сложные программы,&#xD;&#xA;              которые будут вести себя по-разному в различных сценариях.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;h3&gt;if&lt;/h3&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Давайте создадим пример функции, которая определяет тип предложения, переданного в&#xD;&#xA;              качестве аргумента. Изначально она будет различать обычные предложения от&#xD;&#xA;              вопросительных.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;const getTypeOfSentence = (sentence) =&gt; {&#xD;&#xA;const lastChar = sentence[sentence.length - 1];&#xD;&#xA;if (lastChar === &#39;?&#39;) {&#xD;&#xA;  return &#39;question&#39;;&#xD;&#xA;}&#xD;&#xA;return &#39;general&#39;;&#xD;&#xA;};&#xD;&#xA;getTypeOfSentence(&#39;Hodor&#39;);  // general&#xD;&#xA;getTypeOfSentence(&#39;Hodor?&#39;); // question&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              &#34;if&#34; - это конструкция в языке программирования, которая контролирует&#xD;&#xA;              последовательность выполнения операций. Внутри скобок передается выражение-предикат,&#xD;&#xA;              за которым следует блок кода в фигурных скобках. Этот блок кода выполняется только в&#xD;&#xA;              случае если предикат равен true.&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Логические орераторы в JavaScript</title>
      <link>http://localhost:1313/logicheskie_operatory_v_javascript/</link>
      <pubDate>Tue, 05 Mar 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/logicheskie_operatory_v_javascript/</guid>
      <description>&lt;p&gt;Лекция про логические операторы c Udemy&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Логические выражения на языке JavaScript могут быть объединены, для использования в&#xD;&#xA;              качестве проверки, например паролей. Возьмём к примеру проверку пароля при&#xD;&#xA;              регистрации. Если мы хотим чтобы пароль был не менее 8 символов и более 20 то функция&#xD;&#xA;              выполняющая такую проверку будет такой&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;const isStrongPassword = (password) =&gt; {&#xD;&#xA;const length = password.length;&#xD;&#xA;  return length &gt; 8 &amp;&amp; length &lt; 20;&#xD;&#xA;};&#xD;&#xA;isStrongPassword(&#39;qwerty&#39;); // false&#xD;&#xA;isStrongPassword(&#39;qwerty1234&#39;); // true&#xD;&#xA;isStrongPassword(&#39;zxcvbnmasdfghjkqwertyui&#39;); // false&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              &amp;&amp; - означает «И». Все выражение считается истинным только в том случае, когда истинен&#xD;&#xA;              каждый операнд — и слева и справа. Иными словами, &amp;&amp; означает «и то, и другое».&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
  </channel>
</rss>
