<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dxrkd3v</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Dxrkd3v</description>
    <generator>Hugo</generator>
    <language>ru</language>
    <lastBuildDate>Sun, 30 Mar 2025 08:03:24 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Методы before() и after() в JavaScript</title>
      <link>http://localhost:1313/before_and_after_v_js/</link>
      <pubDate>Sun, 30 Mar 2025 08:03:24 +0300</pubDate>
      <guid>http://localhost:1313/before_and_after_v_js/</guid>
      <description>&lt;p&gt;Методы &lt;code&gt;before()&lt;/code&gt; и &lt;code&gt;after()&lt;/code&gt; позволяют добавлять новые элементы или текст до или после существующего элемента. В отличие от &lt;code&gt;append()&lt;/code&gt; и &lt;code&gt;prepend()&lt;/code&gt;, они работают не внутри, а рядом с целевым элементом.&lt;/p&gt;&#xA;&lt;h3 id=&#34;elementbefore--вставка-перед-элементом&#34;&gt;element.before() — вставка перед элементом&lt;/h3&gt;&#xA;&lt;p&gt;Метод before() добавляет новый контент перед указанным элементом.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;heading&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newText&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;newText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textContent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Тут был Dxrkd3v =)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;heading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;before&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;newText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Теперь &amp;lt;p&amp;gt; появится перед &amp;lt;title&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;elementafter--вставка-после-элемента&#34;&gt;element.after() — вставка после элемента&lt;/h3&gt;&#xA;&lt;p&gt;Метод &lt;code&gt;after()&lt;/code&gt; добавляет контент после указанного элемента.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;submitBtn&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;note&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;span&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;note&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textContent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; (Это важно!)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;after&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;note&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Теперь &amp;lt;span&amp;gt; появится сразу после кнопки&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Методы &lt;code&gt;before()&lt;/code&gt; и &lt;code&gt;after()&lt;/code&gt; помогают добавить элементы перед или после других без сложных манипуляций с родительскими контейнерами. Они делают код чище и проще, особенно при динамической модификации интерфейса.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Создание текстовых узлов с помощью createTextNode в JavaScript</title>
      <link>http://localhost:1313/createtextnode_js/</link>
      <pubDate>Sun, 30 Mar 2025 08:00:24 +0300</pubDate>
      <guid>http://localhost:1313/createtextnode_js/</guid>
      <description>&lt;p&gt;Метод &lt;code&gt;document.createTextNode()&lt;/code&gt; создаёт текстовый узел без оборачивающего &lt;code&gt;HTML-тега&lt;/code&gt;. Полезная вещь когда нужно добавить чистый текст в элемент, не затрагивая его структуру.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;textNode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createTextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Тут был Dxrkd3v&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Пример встраивания текста в параграф, на чистом &lt;code&gt;JS&lt;/code&gt; не редактируя &lt;code&gt;HTML&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createTextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Привет, Cxd3!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;appendChild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;appendChild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Также метод позволяет менять текст на лету&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;h1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;appendChild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createTextNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;New h1!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;createTextNode()&lt;/code&gt; прикольный способ добавить текст без изменения структуры документа. Он позволяет точно управлять контентом, не нарушая существующий &lt;code&gt;HTML&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Методы append() и prepend() в JavaScript</title>
      <link>http://localhost:1313/append_prepend_v_js/</link>
      <pubDate>Sun, 30 Mar 2025 07:00:24 +0300</pubDate>
      <guid>http://localhost:1313/append_prepend_v_js/</guid>
      <description>&lt;p&gt;Методы &lt;code&gt;append()&lt;/code&gt; и &lt;code&gt;prepend()&lt;/code&gt; позволяют добавлять элементы или текст в начало или конец другого элемента. Они делают код чище и удобнее по сравнению с &lt;code&gt;appendChild()&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;elementappend--добавление-в-конец&#34;&gt;element.append() — добавление в конец&lt;/h3&gt;&#xA;&lt;p&gt;Метод &lt;code&gt;append()&lt;/code&gt; вставляет содержимое в конец элемента. Он принимает не только элементы, но и строки&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;container&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;box&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newDiv&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;newDiv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textContent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Новый элемент&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;newDiv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; А это просто текст&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;elementprepend--добавление-в-начало&#34;&gt;element.prepend() — добавление в начало&lt;/h3&gt;&#xA;&lt;p&gt;Метод &lt;code&gt;prepend()&lt;/code&gt; вставляет содержимое в начало элемента.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;myList&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newItem&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;newItem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textContent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Новый первый пункт&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prepend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;newItem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;append()&lt;/code&gt; и &lt;code&gt;prepend()&lt;/code&gt; — лаконичные методы, позволяющие добавлять элементы в &lt;code&gt;DOM&lt;/code&gt;. Они заменяют &lt;code&gt;appendChild()&lt;/code&gt;, делают код компактнее и позволяют вставлять сразу несколько значений.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Метод createElement() в JavaScript</title>
      <link>http://localhost:1313/metod_createelement_v_js/</link>
      <pubDate>Sat, 29 Mar 2025 10:00:24 +0300</pubDate>
      <guid>http://localhost:1313/metod_createelement_v_js/</guid>
      <description>&lt;p&gt;Метод &lt;code&gt;document.createElement()&lt;/code&gt; позволяет создавать новые HTML-элементы прямо в &lt;code&gt;JavaScript&lt;/code&gt;. Это основной способ динамического добавления контента на страницу.&lt;/p&gt;&#xA;&lt;p&gt;Синтаксис метода&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;element&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tagName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В момент вызова метода, следует подставить значение &lt;code&gt;HTML-тега&lt;/code&gt; например &lt;code&gt;div&lt;/code&gt;, &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;h1&lt;/code&gt; и так далее.&lt;/p&gt;&#xA;&lt;p&gt;Для примера я создам &lt;code&gt;div&lt;/code&gt; и встрою его в конце &lt;code&gt;body&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newDiv&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;newDiv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textContent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Тут был Dxrkd3v =)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;appendChild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;newDiv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Добавляет div в конец body&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Пример с добавлением &lt;code&gt;CSS-стилей&lt;/code&gt; и классов&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;button&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;textContent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Я кнопка&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;classList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;btn&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;background&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;appendChild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Встраивание тегов в определенном месте с помощью метода &lt;code&gt;insertBefore()&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Объект style в JavaScript</title>
      <link>http://localhost:1313/object_style_v_js/</link>
      <pubDate>Fri, 28 Mar 2025 09:00:24 +0300</pubDate>
      <guid>http://localhost:1313/object_style_v_js/</guid>
      <description>&lt;p&gt;Объект &lt;code&gt;style&lt;/code&gt; позволяет изменять CSS-стили элементов прямо через &lt;code&gt;JavaScript&lt;/code&gt;. С его помощью можно динамически менять цвета, размеры, шрифты и любые другие стили без редактирования CSS-файлов.&lt;/p&gt;&#xA;&lt;p&gt;Чтобы изменить стили элемента, сначала нужно получить его в &lt;code&gt;JavaScript&lt;/code&gt;, а затем обратиться к его свойству &lt;code&gt;style&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;element&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;myElement&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Меняем цвет текста на красный&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Объект &lt;code&gt;style&lt;/code&gt; содержит свойства, соответствующие CSS-стилям. Однако названия записываются в &lt;code&gt;camelCase&lt;/code&gt;, а не через дефис &lt;code&gt;-&lt;/code&gt; как в обычном &lt;code&gt;css&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Метод getElementsByClassName() в JavaScript</title>
      <link>http://localhost:1313/metod_v_js_getelementbyclassname/</link>
      <pubDate>Thu, 27 Mar 2025 09:00:24 +0300</pubDate>
      <guid>http://localhost:1313/metod_v_js_getelementbyclassname/</guid>
      <description>&lt;p&gt;Метод &lt;code&gt;getElementsByClassName&lt;/code&gt; позволяет находить все элементы, которые имеют определённый класс на странице. Это полезный инструмент, когда нужно работать с группой элементов, объединённых одним стилем или функцией.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementsByClassName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Метод позволяет передавать один или несколько классов, например просто &lt;code&gt;menu&lt;/code&gt; либо &lt;code&gt;header menu&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Метод возвращает &lt;code&gt;HTMLCollection&lt;/code&gt; — живую коллекцию, содержащую все элементы с указанным классом. Если на странице таких элементов нет, вернётся пустая коллекция.&lt;/p&gt;&#xA;&lt;p&gt;Запуск поиска по странице по определенному классу&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;boxes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementsByClassName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;box&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;boxes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Выведет коллекцию всех элементов с классом &amp;#34;box&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Теперь поменяю цвет всех элементов с классом &lt;code&gt;box&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Метод getElementsByTagName() в JavaScript</title>
      <link>http://localhost:1313/metod_getelementsbytagname_v_js/</link>
      <pubDate>Wed, 26 Mar 2025 09:00:24 +0300</pubDate>
      <guid>http://localhost:1313/metod_getelementsbytagname_v_js/</guid>
      <description>&lt;p&gt;Метод &lt;code&gt;getElementsByTagName&lt;/code&gt; в &lt;code&gt;JavaScript&lt;/code&gt; позволяет находить элементы на странице по названию их тега. Это очень удобно, если нужно работать с группой однотипных элементов, например, всеми &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; и так далее.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//вернет все дивки со страницы&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Метод возвращает &lt;code&gt;HTMLCollection&lt;/code&gt; — живую коллекцию элементов, которые соответствуют указанному тегу. Если элементы добавятся или удалятся из &lt;code&gt;DOM&lt;/code&gt;, коллекция автоматически обновится.&lt;/p&gt;&#xA;&lt;p&gt;Если таких элементов на странице нет, метод вернёт пустую коллекцию.&lt;/p&gt;&#xA;&lt;p&gt;Запуск поиска всех параграфов на странице:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Внешнее лексическое окружение в JavaScript</title>
      <link>http://localhost:1313/vneshnee_leksicheskoe_okrujenie_v_js/</link>
      <pubDate>Tue, 25 Mar 2025 12:00:24 +0300</pubDate>
      <guid>http://localhost:1313/vneshnee_leksicheskoe_okrujenie_v_js/</guid>
      <description>&lt;p&gt;Внешнее лексическое окружение — это окружение, которое существует в более широком контексте, то есть вне локальной функции. Это может быть глобальное окружение или окружение, которое &amp;ldquo;обвивает&amp;rdquo; функцию, в которой идет работа. Если в функции нет доступа к какой-либо переменной, она будет искать её во внешнем окружении.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Я везде!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;showMessage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Доступ к глобальной переменной&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;showMessage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#39;Я везде!&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В этом примере переменная &lt;code&gt;message&lt;/code&gt; доступна внутри &lt;code&gt;showMessage&lt;/code&gt;, потому что она существует в глобальном лексическом окружении, которое является внешним для данной функции.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Локальное лексическое окружение в JavaScript</title>
      <link>http://localhost:1313/local_lecsik_v_javascript/</link>
      <pubDate>Mon, 24 Mar 2025 12:00:24 +0300</pubDate>
      <guid>http://localhost:1313/local_lecsik_v_javascript/</guid>
      <description>&lt;p&gt;Локальное окружение создается всякий раз, при создании функцию. Переменные, объявленные внутри этой функции, становятся доступными только в её контексте, то есть внутри самой функции. Эти переменные не могут быть доступны за пределами функции, если только не возвращаются как результат выполнения функции.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;localVar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Я локальная переменная&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;localVar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Доступна здесь&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;localVar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Ошибка, переменная не существует вне функции&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В этом примере переменная &lt;code&gt;localVar&lt;/code&gt; существует только внутри &lt;code&gt;test&lt;/code&gt; — её не будет видно за пределами этой функции. Это и есть локальное лексическое окружение.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойство classlist в JavaScript</title>
      <link>http://localhost:1313/classlist_v_js/</link>
      <pubDate>Sun, 23 Mar 2025 12:00:24 +0300</pubDate>
      <guid>http://localhost:1313/classlist_v_js/</guid>
      <description>&lt;p&gt;Свойство &lt;code&gt;classList&lt;/code&gt; — это удобный способ работы с классами элементов в DOM (Document Object Model). Оно предоставляет методы, которые позволяют добавлять, удалять, проверять и переключать классы элементов на веб-странице.&lt;/p&gt;&#xA;&lt;p&gt;Чтобы использовать &lt;code&gt;classList&lt;/code&gt;, нужно сначала получить ссылку на элемент в DOM. После этого можно работать с его классами через это свойство.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;element&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;#myElement&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;classList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Выведет список классов элемента&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;распространенные-методы-classlist&#34;&gt;Распространенные методы classlist&lt;/h3&gt;&#xA;&lt;p&gt;Метод &lt;code&gt;.add&lt;/code&gt; добавляет один или несколько классов к элементу.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;classList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;new-class&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Добавит класс &amp;#39;new-class&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Метод &lt;code&gt;.remove&lt;/code&gt; удаляет указанный класс.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Метод querySelector() в JavaScript</title>
      <link>http://localhost:1313/queryselector_v_js/</link>
      <pubDate>Sat, 22 Mar 2025 12:00:24 +0300</pubDate>
      <guid>http://localhost:1313/queryselector_v_js/</guid>
      <description>&lt;p&gt;Метод &lt;code&gt;querySelector&lt;/code&gt; является одним из самых популярных и мощных инструментов для поиска элементов в DOM (Document Object Model) в JavaScript. Он позволяет найти первый элемент на странице, который соответствует заданному CSS-селектору. Этот метод значительно упрощает работу с DOM по сравнению с устаревшими методами поиска элементов, такими как &lt;code&gt;getElementById&lt;/code&gt;, &lt;code&gt;getElementsByClassName&lt;/code&gt; и другими.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Тут &lt;code&gt;selector&lt;/code&gt; это строка, представляющая CSS-селектор например, &lt;code&gt;#id&lt;/code&gt;, &lt;code&gt;.class&lt;/code&gt;, &lt;code&gt;div&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Метод &lt;code&gt;querySelector&lt;/code&gt; возвращает первый элемент, который соответствует переданному селектору. Если такой элемент не найден, возвращается null. Важно помнить, что &lt;code&gt;querySelector&lt;/code&gt; находит только первый подходящий элемент. Если на странице несколько элементов, которые соответствуют селектору, он выберет лишь первый из них.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ошибки при работе с замыканиями в JavaScript</title>
      <link>http://localhost:1313/oshibki_pri_rabote_s_zamykaniyami_v_javascript/</link>
      <pubDate>Mon, 17 Mar 2025 12:53:24 +0300</pubDate>
      <guid>http://localhost:1313/oshibki_pri_rabote_s_zamykaniyami_v_javascript/</guid>
      <description>&lt;p&gt;Замыкания — это мощный инструмент, но в работе с ними есть несколько подводных камней, которые могут вызвать ошибки. В этой части разберем проблемы, с которыми можно столкнуться при работе с замыканиями, и научимся их обходить.&lt;/p&gt;&#xA;&lt;h3 id=&#34;memory-leaks--утечка-памяти&#34;&gt;Memory Leaks / Утечка памяти&lt;/h3&gt;&#xA;&lt;p&gt;Когда замыкание сохраняет ссылку на переменные из внешней функции, они не могут быть удалены из памяти, пока замыкание не уничтожится. Если переменные содержат большие объекты, это может привести к утечке памяти.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Где используются замыкания в JavaScript</title>
      <link>http://localhost:1313/gde_ispolzuyutsa_zamyekaniya_v_javascript/</link>
      <pubDate>Sun, 16 Mar 2025 11:00:24 +0300</pubDate>
      <guid>http://localhost:1313/gde_ispolzuyutsa_zamyekaniya_v_javascript/</guid>
      <description>&lt;p&gt;Замыкания — это не просто теоретическая концепция, а инструмент, который широко используется в реальных проектах. Они позволяют решать множество задач, от создания приватных данных до улучшения производительности. Разберемся, где замыкания могут быть полезны в реальной разработке.&lt;/p&gt;&#xA;&lt;h3 id=&#34;приватные-переменные&#34;&gt;Приватные переменные&lt;/h3&gt;&#xA;&lt;p&gt;JavaScript не имеет прямой поддержки для создания приватных переменных, как, например, в других языках программирования. Однако с помощью замыканий можно эмулировать такую функциональность. Это позволяет скрыть данные от внешнего доступа и манипулировать ими только через специально предоставленные методы.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Как работают замыкания в JavaScript</title>
      <link>http://localhost:1313/kak_rabotaut_zamykaniya_v_javascript/</link>
      <pubDate>Sat, 15 Mar 2025 11:00:24 +0300</pubDate>
      <guid>http://localhost:1313/kak_rabotaut_zamykaniya_v_javascript/</guid>
      <description>&lt;p&gt;Замыкание в JavaScript — это концепция, при которой внутренняя функция имеет доступ к переменным своей внешней функции, даже если внешняя функция уже завершила выполнение. Это происходит благодаря тому, как JavaScript управляет областью видимости.&lt;/p&gt;&#xA;&lt;p&gt;Когда функция создается, она захватывает все переменные из своей области видимости. Если внутренняя функция возвращается или используется за пределами своей родительской функции, она сохраняет ссылку на эти переменные. Таким образом, внутренний код функции «помнит» данные, которые были доступны в момент её создания, и продолжает работать с ними, даже если родительская функция завершила своё выполнение.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Что такое замыкания в JavaScript</title>
      <link>http://localhost:1313/zamykaniya_v_javascript_prodoljenie/</link>
      <pubDate>Fri, 14 Mar 2025 11:00:24 +0300</pubDate>
      <guid>http://localhost:1313/zamykaniya_v_javascript_prodoljenie/</guid>
      <description>&lt;p&gt;Представим, что я работаю в офисе, и у меня есть персональный шкафчик с документами. У других сотрудников тоже есть свои шкафчики, но они не могут заглянуть в мой, а я – в их. Однако я помню, что лежит внутри моего  шкафа, даже если уйду на обед или в отпуск.&lt;/p&gt;&#xA;&lt;p&gt;В JavaScript такая же ситуация: когда функция запоминает переменные из своей области видимости, даже если выполняется вне этой области, это называется замыканием (closure).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Компилятор кода</title>
      <link>http://localhost:1313/kompilyator_coda/</link>
      <pubDate>Thu, 13 Mar 2025 12:10:24 +0300</pubDate>
      <guid>http://localhost:1313/kompilyator_coda/</guid>
      <description>&lt;p&gt;Компилятор работает иначе, чем интерпретатор. Вместо того чтобы выполнять код построчно, он сначала полностью анализирует программу, оптимизирует её и только потом превращает в машинный код, готовый к запуску.&lt;/p&gt;&#xA;&lt;p&gt;Это позволяет избежать лишней работы во время выполнения: код анализируется один раз, а затем просто исполняется. За счет этого программы, скомпилированные заранее, работают быстрее, ведь процессор получает уже готовые инструкции, а не ждет, пока их «разберут на лету».&lt;/p&gt;&#xA;&lt;p&gt;Компиляция также помогает заранее выявлять ошибки в коде. Если где-то допущена синтаксическая ошибка или используется неподходящий тип данных, компилятор сразу сообщит об этом, еще до запуска программы. Это делает разработку надежнее, хоть и добавляет дополнительный шаг перед запуском.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Интерпретатор кода</title>
      <link>http://localhost:1313/interpretator_coda/</link>
      <pubDate>Wed, 12 Mar 2025 12:10:24 +0300</pubDate>
      <guid>http://localhost:1313/interpretator_coda/</guid>
      <description>&lt;p&gt;Итак, интерпретатор кода - это программа, которая реализует&#xA;3 основные вещи:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Построчно анализирует код.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Обрабатывает это код.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Выполняет исходный код.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Когда интерпретатор выполняет код построчно, он анализирует и исполняет&#xA;команды на лету, без предварительной компиляции.&#xA;Это дает одно важное преимущество — мгновенный отклик.&#xA;Именно поэтому браузеры изначально использовали&#xA;интерпретаторы JavaScript: чем быстрее запускается код,&#xA;тем лучше пользовательский опыт.&lt;/p&gt;&#xA;&lt;p&gt;Но есть и минусы.&#xA;Интерпретатору приходится заново обрабатывать один и тот же код,&#xA;если он встречается несколько раз.&#xA;Например, внутри цикла он каждый раз заново&#xA;анализирует одни и те же строки, что приводит к избыточным вычислениям.&#xA;Оптимизации тут нет — просто механическое выполнение команд.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Замыкание и лексическое окружение в JavaScript</title>
      <link>http://localhost:1313/zamyekaniya_v_javascript/</link>
      <pubDate>Tue, 11 Mar 2025 12:53:24 +0300</pubDate>
      <guid>http://localhost:1313/zamyekaniya_v_javascript/</guid>
      <description>&lt;p&gt;Сегодня разберем, использование замыканий&#xA;в JavaScript.&lt;/p&gt;&#xA;&lt;p&gt;Возьмем небольщой кусок кода, который&#xA;уже попадался в этом курсе&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;logNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;logNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Нужно помнить что JavaScript выполнит этот код&#xA;с помощью интерпритатора последовательно, строка&#xA;за строкой.&lt;/p&gt;&#xA;&lt;p&gt;На строчке &lt;code&gt;let number = 5&lt;/code&gt; тип данных изначально&#xA;будет &lt;code&gt;undefined&lt;/code&gt; мы туда помещаем значение &lt;code&gt;5&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Дальше интерпритатор натыкается на создание функции.&lt;/p&gt;&#xA;&lt;p&gt;Переменная &lt;code&gt;logNumber&lt;/code&gt; прописана с помощью &lt;code&gt;functon declaration&lt;/code&gt;&#xA;и поэтому она уже существует в контексте еще до того как&#xA;интерпретатор дойдет до нее, когда пойдет по коду построчно.&#xA;И мы можем вызвать эту функцию до ее объявления.&#xA;Как мы и поступили.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойство cssText в JavaScript</title>
      <link>http://localhost:1313/svoistvo_csstext_v_js/</link>
      <pubDate>Mon, 10 Mar 2025 09:00:24 +0300</pubDate>
      <guid>http://localhost:1313/svoistvo_csstext_v_js/</guid>
      <description>&lt;p&gt;Свойство &lt;code&gt;cssText&lt;/code&gt; позволяет задать несколько CSS-стилей элементу сразу одной строкой. Это удобно, когда нужно быстро применить множество стилей без использования отдельных свойств объекта &lt;code&gt;style&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cssText&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;правило1; правило2; ...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Реальный пример кода по применению нескольких стилей&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;box&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;myBox&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;box&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cssText&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;width: 200px; height: 100px; background: black;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Пример добавления новых стилей, без удаления старых&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;box&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cssText&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;border: 2px solid black;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если обратиться к &lt;code&gt;cssText&lt;/code&gt;, то он вернет данные в виде строки&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;box&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cssText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// &amp;#34;width: 200px; height: 100px; background: black;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если требуется добавлять стили без перезаписи существующих, лучше использовать &lt;code&gt;classList.add()&lt;/code&gt; для работы с классами или отдельные свойства &lt;code&gt;style&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Метод remove() в Javascript</title>
      <link>http://localhost:1313/remove_v_js/</link>
      <pubDate>Sun, 09 Mar 2025 00:53:24 +0300</pubDate>
      <guid>http://localhost:1313/remove_v_js/</guid>
      <description>&lt;p&gt;Метод &lt;code&gt;remove()&lt;/code&gt; позволяет удалить элемент со страницы без необходимости обращаться к его родителю. Это самый удобный способ удаления элементов в современном &lt;code&gt;JavaScript&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Удаление элемента со страницы по id&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;element&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;box&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Полностью убираем элемент с id &amp;#34;box&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Удаление элемента по классу&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.item&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Удаление всех элементов списка, с помощью комбинации с &lt;code&gt;forEach()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.list-item&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Удаление элементов со страницы, после событий, например при клине на чем либо&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;deleteBtn&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// Кнопка удалит саму себя&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Метод &lt;code&gt;remove()&lt;/code&gt; помогает с удалением элементов из DOM. Он избавляет от лишнего кода и делает работу с динамическими интерфейсами удобнее.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Миксины в препроцессорах SCSS/SASS</title>
      <link>http://localhost:1313/mixin_in_sass/</link>
      <pubDate>Sat, 01 Mar 2025 12:53:24 +0300</pubDate>
      <guid>http://localhost:1313/mixin_in_sass/</guid>
      <description>&lt;p&gt;Миксины — это функции в Sass, которые позволяют создавать блоки стилей, которые можно многократно использовать в разных частях проекта. Они позволяют избежать повторяющегося кода и делают CSS более гибким и удобным для работы. Миксины могут принимать параметры, что дает возможность адаптировать их под разные нужды.&lt;/p&gt;&#xA;&lt;p&gt;Для создания миксина в Sass используется директива @mixin, после которой указывается имя миксина и его содержимое.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scss&#34; data-lang=&#34;scss&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;@mixin&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt; button-style&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#3498db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;white&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;border-radius&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;none&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nc&#34;&gt;.button&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;@include&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt; button-style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В данном примере мы создается миксин &lt;code&gt;button-style&lt;/code&gt;, который задает общие стили для кнопок. Далее, с помощью директивы &lt;code&gt;@include&lt;/code&gt;, мы включаем этот миксин в класс &lt;code&gt;.button&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Фрагментация кода в препроцессоре SASS</title>
      <link>http://localhost:1313/partials_sass/</link>
      <pubDate>Thu, 20 Feb 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/partials_sass/</guid>
      <description>&lt;p&gt;Фрагментация в SASS - это разделение кода на&#xA;несколько файлов, которые можно будет&#xA;переиспользовать в других участках кода.&lt;/p&gt;&#xA;&lt;p&gt;Их еще называют &lt;code&gt;partials&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Данные из этих файлов в дальнейшем легко&#xA;переиспользуются через импорт.&lt;/p&gt;&#xA;&lt;p&gt;На практике это позволяет упростить&#xA;поддержку кода, уменьшает дублирование и&#xA;делает стили модульными.&lt;/p&gt;&#xA;&lt;p&gt;Для создания файла с фрагментом кода или по другому &lt;code&gt;partials&lt;/code&gt;, название файла именуют&#xA;с нижнего подчеркивания &lt;code&gt;_&lt;/code&gt;, например:&#xA;&lt;code&gt;_menu&lt;/code&gt;, &lt;code&gt;_header&lt;/code&gt; или &lt;code&gt;_buttons&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Такие названия файлов указывают компилятору&#xA;&lt;code&gt;SASS&lt;/code&gt; что код из них должен быть импортирован.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Вложенность в препроцессоре SASS</title>
      <link>http://localhost:1313/vlojennost_v_sass/</link>
      <pubDate>Tue, 18 Feb 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/vlojennost_v_sass/</guid>
      <description>&lt;p&gt;Препроцессор SASS позволяет вкладывать&#xA;CSS правила друг в друга.&lt;/p&gt;&#xA;&lt;p&gt;Правило вложенное в элемент выше, применяется&#xA;только для его селекторов.&lt;/p&gt;&#xA;&lt;p&gt;Например:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;F0F0F0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;graybox&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;A9A9A9&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В результате получим в CSS файле:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#F0F0F0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;graybox&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;#A9A9A9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Использование препроцессора в проекте,&#xA;помогает избежать повторения написания&#xA;родительских селекторов. Что значительно&#xA;облегчает написание макетов с большим&#xA;объемом вложенных CSS селекторов.&lt;/p&gt;&#xA;&lt;p&gt;Еще один пример:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;main&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;2rem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;bold&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;pre&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nt&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;3rem&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;После обработки получаем CSS код:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Динамическая типизация в Javascript</title>
      <link>http://localhost:1313/dinamicheskaya_tipizasia_v_javascrit/</link>
      <pubDate>Sun, 16 Feb 2025 12:55:24 +0300</pubDate>
      <guid>http://localhost:1313/dinamicheskaya_tipizasia_v_javascrit/</guid>
      <description>&lt;p&gt;Сегодня поговорим про динамическую типизацию в JavaScript.&lt;/p&gt;&#xA;&lt;p&gt;Динамическая типизация - это возможность одного типа данных&#xA;превращаться в другой. То есть, строка может стать числом,&#xA;число может стать строкой, объект тоже может стать строкой&#xA;и так далее.&lt;/p&gt;&#xA;&lt;p&gt;Так же стоит знать, что в других языках программирования&#xA;встречается статическая типизация данных, это&#xA;когда число всегда остается числом.&lt;/p&gt;&#xA;&lt;h3 id=&#34;tostring&#34;&gt;toString&lt;/h3&gt;&#xA;&lt;p&gt;Рассмотрим пример с превращением в строку &lt;code&gt;String&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Используем старый оператор, которым редко пользуются&#xA;в разработке &lt;code&gt;String&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Метод Object.create в JavaScript</title>
      <link>http://localhost:1313/object_create_v_javascript/</link>
      <pubDate>Sat, 15 Feb 2025 12:53:24 +0300</pubDate>
      <guid>http://localhost:1313/object_create_v_javascript/</guid>
      <description>&lt;p&gt;Метод &lt;code&gt;Object.create()&lt;/code&gt; в JavaScript используется для создания нового объекта с указанным прототипом. Это один из способов реализации прототипного наследования.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;girl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;sayHello&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;greet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;elle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;elle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sayHello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Теперь &lt;code&gt;elle&lt;/code&gt; наследует метод &lt;code&gt;sayHello&lt;/code&gt; от объекта &lt;code&gt;girl&lt;/code&gt;&#xA;и может говорить Hello&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Object.create()&lt;/code&gt; позволяет явно указать прототип для нового объекта, что полезно для реализации наследования.&lt;/p&gt;&#xA;&lt;p&gt;Если передать &lt;code&gt;null&lt;/code&gt; в качестве прототипа, объект не будет наследовать никаких свойств или методов даже базовых, таких как &lt;code&gt;toString&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Метод setPrototypeOf в JavaScript</title>
      <link>http://localhost:1313/setprototype_v_javascript/</link>
      <pubDate>Fri, 14 Feb 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/setprototype_v_javascript/</guid>
      <description>&lt;p&gt;Метод &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; в JavaScript позволяет динамически установить прототип &lt;code&gt;[[Prototype]]&lt;/code&gt; для указанного объекта. Это способ изменить прототип объекта после его создания.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setPrototypeOf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;prototype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Тут &lt;code&gt;obj&lt;/code&gt; это объект, прототип которого нужно установить&#xA;или изменить.&lt;/p&gt;&#xA;&lt;p&gt;А &lt;code&gt;prototype&lt;/code&gt; это новый прототип.&lt;/p&gt;&#xA;&lt;p&gt;Давайте разберем небольшой пример.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//Прототип&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;skillsOfGirls&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;intro&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`Привет, меня зовут &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;dance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt; танцует!`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//Новый объект&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;girl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Elle&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//Укажем прототип для girl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setPrototypeOf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;skillsOfGirls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//Обращаемся к методам и используем&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;intro&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Привет, меня зовут Elle&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;girl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Elle танцует&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Здесь объект &lt;code&gt;girl&lt;/code&gt; получает доступ к методам &lt;code&gt;intro&lt;/code&gt; и &lt;code&gt;dance&lt;/code&gt;&#xA;через прототип &lt;code&gt;skillsOfGirls&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Переменные в препроцессорах SCSS/SASS</title>
      <link>http://localhost:1313/peremennye_v_sass/</link>
      <pubDate>Mon, 10 Feb 2025 12:53:24 +0300</pubDate>
      <guid>http://localhost:1313/peremennye_v_sass/</guid>
      <description>&lt;p&gt;Мы можем использовать переменные как удобный способ хранения данных, которые будут использоваться в стилях на протяжении всего проекта. В переменных можно сохранять цвета, шрифты, отступы и другие CSS-значения, чтобы легко управлять ими и избежать дублирования кода. В Sass для создания переменной используется символ &lt;code&gt;$&lt;/code&gt;. Например:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scss&#34; data-lang=&#34;scss&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$main-color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;rgb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;108&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;52&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;219&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$font-family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Arial&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;sans-serif&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nc&#34;&gt;.header&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$main-color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$font-family&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Переменные — это основа для создания масштабируемых и легко поддерживаемых стилей в Sass. Они особенно полезны в больших проектах, где важно сохранять единообразие и быстро вносить изменения.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Основы препроцессора SASS</title>
      <link>http://localhost:1313/vedenie_v_sass/</link>
      <pubDate>Sun, 09 Feb 2025 12:53:24 +0300</pubDate>
      <guid>http://localhost:1313/vedenie_v_sass/</guid>
      <description>&lt;p&gt;SCSS/SASS — это препроцессоры CSS, которые расширяют возможности стандартных стилей. Они позволяют использовать переменные, вложенные селекторы, миксины, функции и другие удобные инструменты, делая код более структурированным и легким в поддержке. SCSS — это синтаксис, похожий на CSS, а SASS — более лаконичный вариант с отступами. Оба варианта компилируются в обычный CSS, который понимают браузеры. Эти технологии значительно ускоряют разработку и упрощают работу с большими проектами.&lt;/p&gt;&#xA;&lt;p&gt;Для себя я выберу SASS, мне больше понравился его синтаксис.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Гайд по NPM</title>
      <link>http://localhost:1313/npm/</link>
      <pubDate>Sat, 08 Feb 2025 12:00:24 +0300</pubDate>
      <guid>http://localhost:1313/npm/</guid>
      <description>&lt;p&gt;NPM (Node Package Manager) — это инструмент для управления пакетами в среде Node.js. Он позволяет устанавливать необходимые библиотеки, контролировать зависимости проекта, а также настраивать и редактировать его метаданные.&lt;/p&gt;&#xA;&lt;h3 id=&#34;загрузка-пакетов&#34;&gt;Загрузка пакетов&lt;/h3&gt;&#xA;&lt;p&gt;Пакеты в NPM — это упакованный программный код, который может представлять собой библиотеку, утилиту или полноценное приложение.&lt;/p&gt;&#xA;&lt;p&gt;Разработчики используют готовые пакеты, чтобы избежать лишних телодвижений — вместо того чтобы писать с нуля модули, которые уже существуют, они применяют уже созданные решения.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spread оператор в JavaScript</title>
      <link>http://localhost:1313/spread_v_javascript/</link>
      <pubDate>Fri, 07 Feb 2025 12:00:24 +0300</pubDate>
      <guid>http://localhost:1313/spread_v_javascript/</guid>
      <description>&lt;p&gt;Spread operator, который выглядит следующим образом &lt;code&gt;(...)&lt;/code&gt; — это инструмент в JavaScript, который позволяет &amp;ldquo;разворачивать&amp;rdquo; элементы массивов или свойства объектов.&lt;/p&gt;&#xA;&lt;p&gt;Spread operator обозначается тремя точками &lt;code&gt;(...)&lt;/code&gt;. Его основная задача — &amp;ldquo;развернуть&amp;rdquo; элементы массива или свойства объекта, чтобы их можно было использовать в других контекстах. Например, он позволяет легко копировать массивы, объединять объекты, передавать элементы массива в функцию и многое другое.&lt;/p&gt;&#xA;&lt;p&gt;Spread Operator очень часто используется с массивами.&#xA;Разберем пример с клонированием массива. Эта возможность&#xA;очень полезна когда нужно избежать изминений&#xA;исходного массива&lt;/p&gt;</description>
    </item>
    <item>
      <title>Методы массивов в JavaScript</title>
      <link>http://localhost:1313/method_of_arrays_javascript/</link>
      <pubDate>Thu, 30 Jan 2025 18:55:24 +0300</pubDate>
      <guid>http://localhost:1313/method_of_arrays_javascript/</guid>
      <description>&lt;p&gt;Все методы и свойства которые содержат массивы&#xA;можно найти в документации.&lt;/p&gt;&#xA;&lt;p&gt;Либо можно вывести в консоль все методы при помощи&#xA;команды &lt;code&gt;console.dir&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Сегодня мы познакомимся с самыми часто используемыми&#xA;методами массивов.&lt;/p&gt;&#xA;&lt;p&gt;Для этого создадим простой массив для эксперементов.&#xA;Сначала это будет набор простых чисел.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;array&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Часто при работе с массивами приходится его редактировать.&#xA;Мы либо хотим что то добавить или удалить.&lt;/p&gt;&#xA;&lt;p&gt;Для этого существует методы как для редактирования&#xA;начала массива или его последнего значения.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Деструктуризация объектов в Javascript</title>
      <link>http://localhost:1313/destructurisazia_objectov_javascript/</link>
      <pubDate>Sat, 25 Jan 2025 12:55:24 +0300</pubDate>
      <guid>http://localhost:1313/destructurisazia_objectov_javascript/</guid>
      <description>&lt;p&gt;Деструктуризация объектов — это удобный способ извлечения данных из объектов в JavaScript. Она позволяет &amp;ldquo;разбирать&amp;rdquo; объект на отдельные переменные, что делает код более читаемым и компактным.&lt;/p&gt;&#xA;&lt;p&gt;Объекты в Javascript - это так называемые ассоциативные&#xA;массивы, они схожи с объектами в других языках,&#xA;например таких как &lt;code&gt;PHP&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Небольшой пример для эксперементов с объектами&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Elle&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;hobbies&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;film&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Crank&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;music&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;DVRST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#39;Elle&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Удалить свойство из объекта можно с помощью метода &lt;code&gt;delete&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Массивы и псевдомассивы в Javascript</title>
      <link>http://localhost:1313/pseudo_array_javascript/</link>
      <pubDate>Sat, 25 Jan 2025 12:53:24 +0300</pubDate>
      <guid>http://localhost:1313/pseudo_array_javascript/</guid>
      <description>&lt;p&gt;Сегодня пройдет лекция про массивы и псевдомассивы.&lt;/p&gt;&#xA;&lt;p&gt;А так про основные методы работы с ними.&lt;/p&gt;&#xA;&lt;p&gt;Массивы и псевдомассивы — это две разные, но похожие структуры данных в JavaScript.&lt;/p&gt;&#xA;&lt;p&gt;Массивы — это встроенный тип данных в JavaScript, предназначенный для хранения упорядоченных коллекций элементов. Они имеют множество полезных методов для работы с данными.&lt;/p&gt;&#xA;&lt;p&gt;Пример простого массива&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Выведет: 5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Выведет: 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Добавляем элемент в конец&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Выведет: [1, 2, 3, 4, 5, 6]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Особенности массивов:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Callback функции в JavaScript</title>
      <link>http://localhost:1313/callback_function_javascript/</link>
      <pubDate>Wed, 22 Jan 2025 12:55:24 +0300</pubDate>
      <guid>http://localhost:1313/callback_function_javascript/</guid>
      <description>&lt;p&gt;Callback-функции в JavaScript — это функции, которые передаются в качестве аргументов другим функциям и выполняются после завершения определенной операции или события. Они широко используются в асинхронном программировании, обработке событий и функциональном программировании.&lt;/p&gt;&#xA;&lt;p&gt;Пример передачи callback-функции в другую функцию как&#xA;аргумента и вызов внутри нее&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;greeting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;processUserInput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;prompt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Please enter your name.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;processUserInput&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;greeting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// greeting — это callback-функция&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Callback-функции часто используются для обработки асинхронных операций, таких как запросы к серверу, чтение файлов или таймеры&lt;/p&gt;</description>
    </item>
    <item>
      <title>Функция round() в Python</title>
      <link>http://localhost:1313/round_in_python/</link>
      <pubDate>Tue, 21 Jan 2025 12:05:24 +0300</pubDate>
      <guid>http://localhost:1313/round_in_python/</guid>
      <description>&lt;h3 id=&#34;number&#34;&gt;Number&lt;/h3&gt;&#xA;&lt;p&gt;Функция &lt;code&gt;round()&lt;/code&gt; в Python используется для округления чисел. Она может округлять как целые числа, так и числа с плавающей запятой &lt;code&gt;float&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Синтаксис функции &lt;code&gt;round()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ndigits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;number&lt;/code&gt; — число, которое нужно округлить&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;ndigits&lt;/code&gt; (необязательный) — количество знаков после запятой. Если не указано, число округляется до ближайшего целого&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Округление до ближайшего целого&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3.14159&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Вывод: 3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Округление с указанием количества знаков после запятой&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3.14159&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Вывод: 3.14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Округление до ближайшего большего целого&lt;/p&gt;</description>
    </item>
    <item>
      <title>Действия с числами в Python</title>
      <link>http://localhost:1313/numbers_in_python/</link>
      <pubDate>Tue, 21 Jan 2025 12:00:24 +0300</pubDate>
      <guid>http://localhost:1313/numbers_in_python/</guid>
      <description>&lt;p&gt;Разберем как выполняются элементарные&#xA;математические операции в Python.&lt;/p&gt;&#xA;&lt;h4 id=&#34;сложение-&#34;&gt;Сложение (+)&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Вывод: 15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;вычитание--&#34;&gt;Вычитание (-)&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Вывод: 5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;умножение-&#34;&gt;Умножение (*)&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Вывод: 50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В Python можно перемножать целое число &lt;code&gt;int&lt;/code&gt; на число с плавающей запятой &lt;code&gt;float&lt;/code&gt;, результат всегда будет числом с плавающей запятой &lt;code&gt;float&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Это происходит потому, что Python автоматически преобразует целое число в число с плавающей&lt;/p&gt;&#xA;&lt;h4 id=&#34;деление-&#34;&gt;Деление (/)&lt;/h4&gt;&#xA;&lt;p&gt;Деление всегда возвращает число с плавающей точкой &lt;code&gt;float&lt;/code&gt;, даже если результат целый&lt;/p&gt;</description>
    </item>
    <item>
      <title>Методы строк и чисел в JavaScript</title>
      <link>http://localhost:1313/methods_of_str_and_numbers_javascript/</link>
      <pubDate>Thu, 16 Jan 2025 19:53:24 +0300</pubDate>
      <guid>http://localhost:1313/methods_of_str_and_numbers_javascript/</guid>
      <description>&lt;p&gt;Самые простые и часто используемые методы для строк и чисел в JavaScript.&#xA;Эти методы помогут выполнять базовые операции без сложностей.&lt;/p&gt;&#xA;&lt;h3 id=&#34;простые-методы-строк&#34;&gt;Простые методы строк&lt;/h3&gt;&#xA;&lt;h4 id=&#34;touppercase&#34;&gt;toUpperCase()&lt;/h4&gt;&#xA;&lt;p&gt;Преобразует строку в верхний регистр&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toUpperCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;HELLO&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;tolowercase&#34;&gt;toLowerCase()&lt;/h4&gt;&#xA;&lt;p&gt;Преобразует строку в нижний регистр&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;HELLO&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toLowerCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;hello&amp;#34; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;trim&#34;&gt;trim()&lt;/h4&gt;&#xA;&lt;p&gt;Удаляет пробелы с начала и конца строки&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;  Hello  &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;trim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;Hello&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;slicestart-end&#34;&gt;slice(start, end)&lt;/h4&gt;&#xA;&lt;p&gt;Возвращает часть строки от start до end (не включая end)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;Hello&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;replaceold-new&#34;&gt;replace(old, new)&lt;/h4&gt;&#xA;&lt;p&gt;Заменяет первое вхождение подстроки &lt;code&gt;old&lt;/code&gt; на &lt;code&gt;new&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойства строк и чисел в JavaScript</title>
      <link>http://localhost:1313/svoistva_v_javascript/</link>
      <pubDate>Thu, 16 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/svoistva_v_javascript/</guid>
      <description>&lt;p&gt;В JavaScript у строк и чисел есть свойства, которые предоставляют полезную информацию о них.&lt;/p&gt;&#xA;&lt;h4 id=&#34;свойства-строк&#34;&gt;Свойства строк&lt;/h4&gt;&#xA;&lt;p&gt;Строки в JavaScript имеют одно основное свойство &lt;code&gt;length&lt;/code&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Возвращает количество символов в строке&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Это свойство только для чтения (его нельзя изменить)&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, Elle!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p class=&#34;gray&#34;&gt;&#xD;&#xA;Синтаксис свойств строк и чисел в отличие от методов пишется &#xD;&#xA;без скобок в конце.&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;h4 id=&#34;свойства-чисел&#34;&gt;Свойства чисел&lt;/h4&gt;&#xA;&lt;p&gt;У чисел есть статические свойства, такие как &lt;code&gt;MAX_VALUE&lt;/code&gt;, &lt;code&gt;MIN_VALUE&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, &lt;code&gt;EPSILON&lt;/code&gt;, &lt;code&gt;MAX_SAFE_INTEGER&lt;/code&gt; и &lt;code&gt;MIN_SAFE_INTEGER&lt;/code&gt;, которые предоставляют информацию о числовых константах и ограничениях.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Оператор return в Javascript</title>
      <link>http://localhost:1313/return_javascript/</link>
      <pubDate>Wed, 15 Jan 2025 19:53:24 +0300</pubDate>
      <guid>http://localhost:1313/return_javascript/</guid>
      <description>&lt;p&gt;Оператор &lt;code&gt;return&lt;/code&gt; в JavaScript используется для возврата значения из функции. Когда интерпретатор встречает &lt;code&gt;return&lt;/code&gt;, выполнение функции прекращается, и управление возвращается туда, где функция была вызвана. Если после &lt;code&gt;return&lt;/code&gt; указано значение, оно возвращается как результат функции.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;return&lt;/code&gt; может вернуть любое значение: число, строку, объект, массив, другую функцию и даже &lt;code&gt;null&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Как только выполняется &lt;code&gt;return&lt;/code&gt;, функция сразу завершает свою работу. Код, который находится после &lt;code&gt;return&lt;/code&gt;, не выполняется.&lt;/p&gt;&#xA;&lt;p&gt;Если &lt;code&gt;return&lt;/code&gt; используется без значения, функция возвращает &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Аргументы в функциях JavaScript</title>
      <link>http://localhost:1313/argument_javascript/</link>
      <pubDate>Wed, 15 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/argument_javascript/</guid>
      <description>&lt;p&gt;В JavaScript аргументы — это значения, которые передаются в функцию при её вызове. Они позволяют функциям принимать данные и работать с ними. Аргументы могут быть любого типа: числа, строки, объекты, массивы, другие функции и т.д.&lt;/p&gt;&#xA;&lt;p&gt;В функциях в Javascript есть параметры и аргументы.&lt;/p&gt;&#xA;&lt;p&gt;Параметры функции - это переменные, указанные в определении функции. Они используются для работы с аргументами, переданными при вызове функции.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;greet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// name — параметр&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`Hello, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;!`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Аргументы функции - это значения, которые передаются в функцию при её вызове.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Function Expression в JavaScript</title>
      <link>http://localhost:1313/fuction_expression_javascript/</link>
      <pubDate>Tue, 14 Jan 2025 19:55:24 +0300</pubDate>
      <guid>http://localhost:1313/fuction_expression_javascript/</guid>
      <description>&lt;p&gt;Function Expression (функциональное выражение) — это способ создания функции в JavaScript, при котором функция определяется как часть выражения (например, присваивается переменной). В отличие от Function Declaration, Function Expression не поднимается (не hoisted) и может быть анонимной или именованной.&lt;/p&gt;&#xA;&lt;p&gt;Синтаксис Function Expression:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;имяПеременной&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;параметры&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// тело функции&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;function&lt;/code&gt; — ключевое слово для создания функции.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;имяПеременной&lt;/code&gt; — переменная, которой присваивается функция.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;параметры&lt;/code&gt; — аргументы, которые передаются в функцию (необязательно).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Function Declaration в JavaScript</title>
      <link>http://localhost:1313/function_declaration_javascript/</link>
      <pubDate>Tue, 14 Jan 2025 18:55:24 +0300</pubDate>
      <guid>http://localhost:1313/function_declaration_javascript/</guid>
      <description>&lt;p&gt;Function Declaration (объявление функции) — это один из способов создания функций в JavaScript.&lt;/p&gt;&#xA;&lt;p&gt;Синтаксис Function Declaration:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;имяФункции&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;параметры&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// тело функции&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;function&lt;/code&gt; — ключевое слово, которое указывает на объявление функции.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;имяФункции&lt;/code&gt; — имя функции, которое используется для её вызова.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;параметры&lt;/code&gt; — аргументы, которые передаются в функцию (необязательно).&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;тело функции&lt;/code&gt; — код, который выполняется при вызове функции.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Пример Function Declaration:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;greet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`Hello, &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;!`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;greet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Elle&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Hello, Elle!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Особенности Function Declaration:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Стрелочные функции в JavaScript</title>
      <link>http://localhost:1313/arrow_function_javascript/</link>
      <pubDate>Tue, 14 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/arrow_function_javascript/</guid>
      <description>&lt;p&gt;Стрелочные функции (Arrow Functions) — это компактный синтаксис для написания функций в JavaScript, представленный в стандарте ES6 (ECMAScript 2015). Они упрощают написание функций и имеют некоторые особенности в поведении по сравнению с обычными функциями.&lt;/p&gt;&#xA;&lt;p&gt;Базовый синтаксис:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;параметры&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;c1&#34;&gt;// тело функции&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если функция состоит из одной строки, можно опустить фигурные скобки &lt;code&gt;{}&lt;/code&gt; и ключевое слово &lt;code&gt;return&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;параметры&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;выражение&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если параметр один, можно опустить круглые скобки &lt;code&gt;()&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;параметр&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;выражение&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если параметров нет, круглые скобки обязательны:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Циклы в JavaScript</title>
      <link>http://localhost:1313/loop_javascript/</link>
      <pubDate>Fri, 10 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/loop_javascript/</guid>
      <description>&lt;p&gt;При написании скриптов часто возникает необходимость выполнять однотипные действия многократно. Например, может потребоваться вывести все товары из списка по очереди или перебрать числа от 1 до 10, выполняя для каждого из них одинаковый код.&lt;/p&gt;&#xA;&lt;p&gt;Для таких случаев в программировании предусмотрены циклы. Циклы позволяют повторять определённый блок кода несколько раз, что делает код более компактным и удобным для работы с большими наборами данных или повторяющимися задачами.&lt;/p&gt;&#xA;&lt;h4 id=&#34;цикл-while&#34;&gt;Цикл While&lt;/h4&gt;&#xA;&lt;p&gt;Цикл &lt;code&gt;while&lt;/code&gt; — это способ организации повторяющихся действий в JavaScript. В отличие от цикла &lt;code&gt;for&lt;/code&gt;, где количество итераций обычно известно заранее, цикл while используется, когда нужно выполнять блок кода до тех пор, пока выполняется определённое условие.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Основные типы данных в Python</title>
      <link>http://localhost:1313/type_of_data_python/</link>
      <pubDate>Thu, 09 Jan 2025 20:53:24 +0300</pubDate>
      <guid>http://localhost:1313/type_of_data_python/</guid>
      <description>&lt;h4 id=&#34;целые-числа&#34;&gt;Целые числа&lt;/h4&gt;&#xA;&lt;p&gt;Тип данных для целых чисел называется int (от английского &amp;ldquo;integer&amp;rdquo;). Целые числа могут быть положительными, отрицательными или нулём.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;# Положительное целое число&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;# Отрицательное целое число&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;# Ноль&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1234567890&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Большое целое число&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;числа-с-плавающей-запятой&#34;&gt;Числа с плавающей запятой&lt;/h4&gt;&#xA;&lt;p&gt;Тип данных для чисел с плавающей запятой (дробных чисел) называется float. Эти числа используются для представления вещественных чисел, то есть чисел с дробной частью. Примеры: &lt;code&gt;3.14&lt;/code&gt;, &lt;code&gt;-0.001&lt;/code&gt;, &lt;code&gt;2.0&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.14&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;# Положительное число с плавающей запятой&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.001&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;# Отрицательное число с плавающей запятой&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.0&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;# Число с плавающей запятой, хотя значение целое&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.23e-4&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# Научная нотация: 1.23 * 10^(-4) = 0.000123&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;строки&#34;&gt;Строки&lt;/h4&gt;&#xA;&lt;p&gt;Строки (тип str) — это последовательности символов, используемые для хранения и обработки текстовых данных.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Операторы сравнения в JavaScript</title>
      <link>http://localhost:1313/operatory_sravneniya/</link>
      <pubDate>Thu, 09 Jan 2025 19:53:24 +0300</pubDate>
      <guid>http://localhost:1313/operatory_sravneniya/</guid>
      <description>&lt;p&gt;Операторы сравнения в JavaScript используются для сравнения двух значений. Они возвращают логическое значение: true (истина) или false (ложь)&lt;/p&gt;&#xA;&lt;p&gt;Равно (==):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Проверяет, равны ли два значения с приведением типов.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Если типы разные, JavaScript попытается преобразовать их к одному типу перед сравнением.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Идет сравнение по значению, а не по типу данных.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// true&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;5&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// true (строка &amp;#39;5&amp;#39; преобразуется в число 5)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Не равно (!=):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Проверяет, не равны ли два значения с приведением типов.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Арифметические операторы в JavaScript</title>
      <link>http://localhost:1313/operators_in_javascript/</link>
      <pubDate>Thu, 09 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/operators_in_javascript/</guid>
      <description>&lt;h4 id=&#34;арифметические-операторы&#34;&gt;Арифметические операторы&lt;/h4&gt;&#xA;&lt;p&gt;Для выполнения математических операций:&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;+&lt;/code&gt; — сложение&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;-&lt;/code&gt; — вычитание&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;*&lt;/code&gt; — умножение&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;/&lt;/code&gt; — деление&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;%&lt;/code&gt; — остаток от деления&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;**&lt;/code&gt; — возведение в степень (ES6)&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;++&lt;/code&gt; — инкремент (увеличение на 1)&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;--&lt;/code&gt; — декремент (уменьшение на 1)&lt;/p&gt;&#xA;&lt;p class=&#39;gray&#39;&gt;&#xD;&#xA;Унарный плюс - это оператор, который используется для преобразования значения в число. &#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;Унарный плюс пытается преобразовать значение, стоящее после него, в числовой тип (number). Это полезно, когда нужно явно привести строку или другой тип данных к числу.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Интерполяция в JavaScript</title>
      <link>http://localhost:1313/interpolyasia/</link>
      <pubDate>Wed, 08 Jan 2025 19:53:24 +0300</pubDate>
      <guid>http://localhost:1313/interpolyasia/</guid>
      <description>&lt;p&gt;Интерполяция в JavaScript — это способ вставки значений переменных или выражений внутрь строки. В JavaScript для этого используются шаблонные строки (template literals), которые заключаются в обратные кавычки (`) вместо обычных одинарных или двойных кавычек.&lt;/p&gt;&#xA;&lt;p&gt;Обратные ковычки по другому назывются бектики.&lt;/p&gt;&#xA;&lt;p&gt;Для вставки значения переменной или выражения в строку&#xA;используется следующий синтаксис ${}&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;El&amp;#39;ham&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`Привет, меня зовут &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;, и мне &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt; лет.`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Ответ:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Привет, меня зовут El&amp;#39;ham, и мне 35 лет.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Для того чтобы использовать интерполяцию&#xA;обязательно использвать косые ковычки,&#xA;с одинарными ничего не сработает.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Метод document.write в JavaScript</title>
      <link>http://localhost:1313/method_document_write/</link>
      <pubDate>Wed, 08 Jan 2025 18:55:24 +0300</pubDate>
      <guid>http://localhost:1313/method_document_write/</guid>
      <description>&lt;p&gt;Метод &lt;code&gt;document.write&lt;/code&gt; – один из наиболее старых методов&#xA;добавления текста на страницу.&lt;/p&gt;&#xA;&lt;p&gt;Метод &lt;code&gt;document.write(str)&lt;/code&gt; функционирует исключительно в момент загрузки HTML-страницы. Он добавляет текст в текущее место HTML-документа до того, как браузер завершит формирование DOM-дерева.&lt;/p&gt;&#xA;&lt;p&gt;После рендера, HTML-документ будет содержать числа &lt;strong&gt;1 2 3&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Метод &lt;code&gt;document.write&lt;/code&gt; не накладывает ограничений на содержимое, которое может быть записано. Он просто добавляет строку в HTML-документ, как если бы она изначально была частью кода, без проверки корректности структуры тегов.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Оператор typeof() в JavaScript</title>
      <link>http://localhost:1313/typeof_javascript/</link>
      <pubDate>Wed, 08 Jan 2025 18:54:24 +0300</pubDate>
      <guid>http://localhost:1313/typeof_javascript/</guid>
      <description>&lt;p&gt;Оператор &lt;code&gt;typeof()&lt;/code&gt; возвращает тип данных аргумента.&lt;/p&gt;&#xA;&lt;p&gt;Полезная команда если нужно выяснить,&#xA;например какой тип данных возвращает&#xA;форма на сайте.&lt;/p&gt;&#xA;&lt;p&gt;У &lt;code&gt;typeof()&lt;/code&gt; существует два варианта синтаксиса:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Синтаксис оператора &lt;code&gt;typeof x&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Синтаксис функции &lt;code&gt;typeof(x)&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Оба синтаксиса работают одинаково.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;typeof()&lt;/code&gt; возвращает строку, которая содержит&#xA;тип данных.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;undefined&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;number&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;bigint&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;boolean&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;string&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Symbol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;symbol&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;object&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;object&amp;#34;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){}&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;#34;function&amp;#34; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Нужно обратить внимание на &lt;code&gt;null&lt;/code&gt;, так как это не&#xA;объект а отдельный тип данных. Это официально признанная ошибка в языке.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Alert, Promt и Confirm в JavaScript</title>
      <link>http://localhost:1313/alert_promt_confirm_javascript/</link>
      <pubDate>Wed, 08 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/alert_promt_confirm_javascript/</guid>
      <description>&lt;p&gt;Простое взаимодействие сайта с пользователями через&#xA;команды &lt;code&gt;alert()&lt;/code&gt;, &lt;code&gt;promt()&lt;/code&gt; и &lt;code&gt;confirm()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Хотя данные команды не используются&#xA;в реальных проектах, все равно следует&#xA;изучить их.&lt;/p&gt;&#xA;&lt;p&gt;Все три команды напоминают работу&#xA;через &lt;code&gt;console log()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;alert&#34;&gt;Alert()&lt;/h4&gt;&#xA;&lt;p&gt;Синтаксис команды очень простой&#xA;и само действие тоже.&#xA;&lt;code&gt;alert()&lt;/code&gt; создает модальное окно на странице с текстом&#xA;который можно прописать заранее.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Hello, friends!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Вызванное модальное окно через &lt;code&gt;alert()&lt;/code&gt;&#xA;невозможно застилизовать.&lt;/p&gt;&#xA;&lt;p&gt;Команда &lt;code&gt;alert()&lt;/code&gt; используется, чтобы&#xA;предупредить пользователя о чем то очень важном.&#xA;Например, если пользователь начинает покидать&#xA;страницу, через модальное окно обычно&#xA;сообщается, что введенная им информация будет&#xA;потеряна если он закроет страницу.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Функция main() на Си</title>
      <link>http://localhost:1313/main_in_c/</link>
      <pubDate>Mon, 06 Jan 2025 19:53:24 +0300</pubDate>
      <guid>http://localhost:1313/main_in_c/</guid>
      <description>&lt;p&gt;Самая важная часть программы, написанной на языке Си —&#xA;это функция main()&lt;/p&gt;&#xA;&lt;p&gt;На Си существует два вида функций&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Включенные в сам язык&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Созданные самостоятельно&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;В каждой программе обязательно присутствие функции main()&lt;/p&gt;&#xA;&lt;p&gt;От обычной команды, функцию отличает наличие скобок, например&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;calcIt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Команды идут без скобок&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;return&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;while&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;iffloat&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если имя функции состоит из нескольких слов&#xA;то следует их прописывать в формате camelCase&lt;/p&gt;&#xA;&lt;p&gt;Например&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;doReportPrint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;calcIt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Имя функции main(), а также имена практически всех встроенных&#xA;функций С должны содержать только буквы нижнего регистра.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hello, World! на Си</title>
      <link>http://localhost:1313/hello_world_c/</link>
      <pubDate>Mon, 06 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/hello_world_c/</guid>
      <description>&lt;p&gt;Короткий кусок кода из учебника&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Программирование на С для начинающих&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Пример вывода простого текста в консоль&#xA;с помощью printf()&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Интересно что делают &lt;code&gt;&amp;lt;stdio.h&amp;gt;&lt;/code&gt; &lt;code&gt;include&lt;/code&gt; и &lt;code&gt;return 0&lt;/code&gt; тем более возвращает &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Запустил через &lt;code&gt;code runner&lt;/code&gt; вроде заработало,&#xA;хотя и с ошибками в функции &lt;code&gt;main()&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;tempCodeRunnerFile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;warning&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;defaults&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;‘&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;’&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Wimplicit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^~~~&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Hello&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;World&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Done&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exited&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.097&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;seconds&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Команды из VimTutor</title>
      <link>http://localhost:1313/vimtutor/</link>
      <pubDate>Sat, 04 Jan 2025 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/vimtutor/</guid>
      <description>&lt;p&gt;Список команд из урока VimTutor&lt;/p&gt;&#xA;&lt;h4 id=&#34;выход-из-vim&#34;&gt;Выход из Vim&lt;/h4&gt;&#xA;&lt;p&gt;:q › Выход если не было изминений&lt;/p&gt;&#xA;&lt;p&gt;:q! › Выйти из Vim и сбросить все внесенные изминения&lt;/p&gt;&#xA;&lt;p&gt;:wq › Сохранить изминения и закрыть файл&lt;/p&gt;&#xA;&lt;p&gt;:w › Сохранить файл.&lt;/p&gt;&#xA;&lt;h4 id=&#34;редактирование-и-навигация&#34;&gt;Редактирование и навигация&lt;/h4&gt;&#xA;&lt;p&gt;k › Для движения наверх&lt;/p&gt;&#xA;&lt;p&gt;h › Для движения влево&lt;/p&gt;&#xA;&lt;p&gt;l › Для движения вправо&lt;/p&gt;&#xA;&lt;p&gt;j › Для движения вниз&lt;/p&gt;&#xA;&lt;p&gt;х › Удаляет символ на котором курсор&lt;/p&gt;&#xA;&lt;p&gt;i › Переводит в INSERT MODE слева от курсора&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git - основные команды для контроля версий</title>
      <link>http://localhost:1313/gitbook/</link>
      <pubDate>Mon, 30 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/gitbook/</guid>
      <description>&lt;h2 id=&#34;git&#34;&gt;Git&lt;/h2&gt;&#xA;&lt;p&gt;Git — это система управления версиями, позволяет отслеживать изменения в исходном коде. Она позволяет создавать коммиты проекта, ветвления и слияния изменений. Тут основные тезисы и команды для работы с гитом из учебника.&lt;/p&gt;&#xA;&lt;p&gt;Установка Git в Linux&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;apt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;После установки, проверяем версию&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Ответ &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.43&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Конфиг лежит в файле ~/.gitconfig Сюда Git запишет настройки, например алиасы, ник пользователя, объем буфера и прочее.&lt;/p&gt;&#xA;&lt;p&gt;В новой системе после установки укажем пользователя и почту. Эту инфу Git будет включать в коммиты.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linkin Park - In The End</title>
      <link>http://localhost:1313/linkin_park_in_the_end/</link>
      <pubDate>Mon, 30 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/linkin_park_in_the_end/</guid>
      <description>&lt;iframe&#xD;&#xA;    frameborder=&#34;0&#34;&#xD;&#xA;    style=&#34;width: 100%; height: 185px&#34;&#xD;&#xA;    width=&#34;100%&#34;&#xD;&#xA;    height=&#34;100&#34;&#xD;&#xA;    src=&#34;https://music.yandex.ru/iframe/track/178495/18111&#34;&#xD;&#xA;    &gt;&#xD;&#xA;&lt;/iframe&gt;&#xD;&#xA;&lt;h3 id=&#34;verse&#34;&gt;[Verse:]&lt;/h3&gt;&#xA;&lt;p&gt;It starts with one thing&lt;/p&gt;&#xA;&lt;p class=&#34;gray&#34;&gt;Все начинается одинаково&lt;/p&gt;&#xD;&#xA;I don&#39;t know why&#xD;&#xA;&lt;p class=&#34;gray&#34;&gt;Не знаю почему&lt;/p&gt;&#xD;&#xA;It doesn&#39;t even matter how hard you try &#xD;&#xA;&lt;p class=&#34;gray&#34;&gt;Не имеет знчения как сильно ты старался&lt;/p&gt;&#xD;&#xA;Keep that in mind&#xD;&#xA;&lt;p class=&#34;gray&#34;&gt;Запомни&lt;/p&gt;&#xD;&#xA;I designed this rhyme&#xD;&#xA;&lt;p class=&#34;gray&#34;&gt;Я написал эти стихи&lt;/p&gt;&#xD;&#xA;To explain in due time&#xD;&#xA;&lt;p class=&#34;gray&#34;&gt;Чтобы объяснить в свое время&lt;/p&gt;&#xD;&#xA;All I know&#xD;&#xA;&lt;p class=&#34;gray&#34;&gt;Все что я знаю&lt;/p&gt;&#xD;&#xA;Time is a valuable thing&#xD;&#xA;&lt;p class=&#34;gray&#34;&gt;Время – ценная вещь&lt;/p&gt;&#xD;&#xA;Watch it fly by as the pendulum swings&#xD;&#xA;&lt;p class=&#34;gray&#34;&gt;Смотри, как оно утекает, пока качается маятник&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux - команды</title>
      <link>http://localhost:1313/linux/</link>
      <pubDate>Mon, 30 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/linux/</guid>
      <description></description>
    </item>
    <item>
      <title>Vim - Keybindings</title>
      <link>http://localhost:1313/vimbook/</link>
      <pubDate>Mon, 30 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/vimbook/</guid>
      <description>&lt;h3 id=&#34;vim&#34;&gt;Vim&lt;/h3&gt;&#xA;&lt;p&gt;Vim — это текстовый редактор известный своей эффективностью и гибкостью. Он поддерживает множество плагинов и настроек что&#xA;позволяет превратить его в полноценную IDE. Vim + слепая печать, ускоряют навигацию и редактирование, освоив которые разработка становится быстрее и удобнее в разы.&lt;/p&gt;&#xA;&lt;h4 id=&#34;редактирование-текста&#34;&gt;Редактирование текста&lt;/h4&gt;&#xA;&lt;p&gt;Для основных команд используются один или два символа:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;i - ввод &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cw - изменить слово&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Используя буквы в качестве команд, можно очень быстро редактировать файл.&#xA;Не нужно запоминать сотни горячих клавиш или тянуться пальцами до клавиш.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Этапы развития информационных систем</title>
      <link>http://localhost:1313/etapy_razvitiya_informatsionnyh_system/</link>
      <pubDate>Sat, 28 Dec 2024 21:53:24 +0300</pubDate>
      <guid>http://localhost:1313/etapy_razvitiya_informatsionnyh_system/</guid>
      <description>&lt;p&gt;Первые ИС появились в 50-х гг. В эти годы они были предназначены для&#xA;обработки счетов и расчета зарплаты, а реализовывались на электромеханических&#xA;бухгалтерских счетных машинах. Это приводило к некоторому сокращению затрат&#xA;и времени на подготовку бумажных документов.&lt;/p&gt;&#xA;&lt;p&gt;60-е гг. знаменуются изменением отношения к ИС. Информация,&#xA;полученная из них, стала применяться для периодической отчетности по многим&#xA;параметрам. Для этого организациям требовалось компьютерное оборудование&#xA;широкого назначения, способное обслуживать множество функций, а не только&#xA;обрабатывать счета и считать з/пл.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Способ изучения информационной системой</title>
      <link>http://localhost:1313/sposoby_isucheniya_informatsionnoy_systemy/</link>
      <pubDate>Sat, 28 Dec 2024 20:53:24 +0300</pubDate>
      <guid>http://localhost:1313/sposoby_isucheniya_informatsionnoy_systemy/</guid>
      <description>&lt;p&gt;На микроуровне основными становятся внутренние характеристики&#xA;системы, характер взаимодействия элементов между собой, их свойства и условия&#xA;функционирования.&lt;/p&gt;&#xA;&lt;p&gt;Для изучения системы сочетаются 2 компонента.&lt;/p&gt;&#xA;&lt;h3 id=&#34;информационная-система&#34;&gt;Информационная система&lt;/h3&gt;&#xA;&lt;p&gt;Информационная система - это взаимосвязанная совокупность&#xA;информационных, технических, программных, математических, организационных,&#xA;правовых, эргономических, лингвистических, технологических и других средств, а&#xA;также персонала, предназначенная для сбора, обработки, хранения и выдачи&#xA;экономической информации и принятия управленческих решений.&lt;/p&gt;&#xA;&lt;h3 id=&#34;свойства-информационных-систем&#34;&gt;Свойства информационных систем&lt;/h3&gt;&#xA;&lt;p&gt;Свойства информационных систем:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 › любая ИС может быть подвергнута анализу, построена и управляема на&#xA;основе общих принципов построения сложных систем;&lt;/li&gt;&#xA;&lt;li&gt;2 › при построении ИС необходимо использовать системный подход;&lt;/li&gt;&#xA;&lt;li&gt;3 › ИС является динамичной и развивающейся системой;&lt;/li&gt;&#xA;&lt;li&gt;4 › ИС следует воспринимать как систему обработки информации,&#xA;состоящую из компьютерных и телекоммуникационных устройств, реализованную&#xA;на базе современных технологий;&lt;/li&gt;&#xA;&lt;li&gt;5 › выходной продукцией ИС является информация, на основе которой&#xA;принимаются решения или производятся автоматическое выполнение рутинных&#xA;операций;&lt;/li&gt;&#xA;&lt;li&gt;6 › участие человека зависит от сложности системы, типов и наборов&#xA;данных, степени формализации решаемых задач.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;процессы-в-информационной-системе&#34;&gt;Процессы в информационной системе&lt;/h3&gt;&#xA;&lt;p&gt;Процессы в информационной системе:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Понятия связанные с информационной системой</title>
      <link>http://localhost:1313/ponatiya_svyazannye_s_sistemoy/</link>
      <pubDate>Sat, 28 Dec 2024 19:53:24 +0300</pubDate>
      <guid>http://localhost:1313/ponatiya_svyazannye_s_sistemoy/</guid>
      <description>&lt;p&gt;Рассмотрим определения других понятий, тесно связанных с системой и ее&#xA;характеристиками.&lt;/p&gt;&#xA;&lt;h3 id=&#34;объект&#34;&gt;Объект&lt;/h3&gt;&#xA;&lt;p&gt;Объектом познания является часть реального мира, которая выделяется и&#xA;воспринимается как единое целое в течение длительного времени. Объект может&#xA;быть материальным и абстрактным, естественным и искусственным. Реально&#xA;объект обладает бесконечным набором свойств различной природы. Практически&#xA;в процессе познания взаимодействие осуществляется с ограниченным множеством&#xA;свойств, лежащих в приделах возможности их восприятия и необходимости для&#xA;цели познания. Поэтому, система как образ объекта, задаётся на конечном&#xA;множестве отобранных для наблюдения свойств.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Понятие информационной системы</title>
      <link>http://localhost:1313/ponatiya_informatsionnyh_system/</link>
      <pubDate>Sat, 28 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/ponatiya_informatsionnyh_system/</guid>
      <description>&lt;p&gt;Термины теория систем и системный анализ, несмотря на период более 25&#xA;лет их использования, все еще не нашли стандартного истолкования.&lt;/p&gt;&#xA;&lt;p&gt;Причина этого факта заключается в динамичности процессов в области&#xA;человеческой деятельности и в принципиальной возможности использовать&#xA;системный подход практически в любой решаемой человеком задаче.&lt;/p&gt;&#xA;&lt;p&gt;Общая теория систем (ОТС) — научная дисциплина, изучающая самые&#xA;фундаментальные понятия и аспекты систем. Она изучает различные явления,&#xA;отвлекаясь от их конкретной природы и основываясь лишь на формальных&#xA;взаимосвязях между различными составляющими их факторами и на характере их&#xA;изменения под влиянием внешних условий, при этом результаты всех наблюдений&#xA;объясняются лишь взаимодействием их компонентов, например характером их&#xA;организации и функционирования, а не с помощью непосредственного обращения&#xA;к природе вовлечённых в явления механизмов (будь они физическими,&#xA;биологическими, экологическими, социологическими, или концептуальными)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Микросетки в Grid</title>
      <link>http://localhost:1313/grid_microsetki/</link>
      <pubDate>Thu, 26 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/grid_microsetki/</guid>
      <description>&lt;h3 id=&#34;repeat&#34;&gt;repeat&lt;/h3&gt;&#xA;&lt;p&gt;Если все колонки в грид-контейнере должны быть одинаковой ширины, удобно использовать функцию &lt;code&gt;repeat&lt;/code&gt;. В скобках после &lt;code&gt;repeat&lt;/code&gt; указывают количество колонок и их ширину, разделяя значения запятой. Например:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;количество&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;колонок&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;ширина&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;колонки&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Это создаст три колонки одинаковой ширины, где &lt;code&gt;1fr&lt;/code&gt; означает, что каждая колонка займет равную долю доступного пространства.&lt;/p&gt;&#xA;&lt;h3 id=&#34;auto-fit&#34;&gt;auto-fit&lt;/h3&gt;&#xA;&lt;p&gt;Если количество колонок должно автоматически подстраиваться под ширину контейнера, используют значение &lt;code&gt;auto-fit&lt;/code&gt;. Его указывают в функции &lt;code&gt;repeat&lt;/code&gt; вместо фиксированного числа колонок. Например:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;auto-fit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;minmax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;200px&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;1fr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В этом случае браузер автоматически создаст столько колонок, сколько поместится в контейнер, при этом каждая колонка будет иметь минимальную ширину &lt;code&gt;200px&lt;/code&gt; и равномерно распределит оставшееся пространство (&lt;code&gt;1fr&lt;/code&gt;). Это особенно полезно для создания адаптивных макетов.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Применение автоматических отступов flexbox</title>
      <link>http://localhost:1313/base_weight_flexbox3/</link>
      <pubDate>Wed, 25 Dec 2024 01:40:24 +0300</pubDate>
      <guid>http://localhost:1313/base_weight_flexbox3/</guid>
      <description>&lt;p&gt;Алгоритм расчёта размеров флекс-элементов и их распределения внутри флекс-контейнера включает три последовательных этапа. Этот процесс значительно сложнее, чем в традиционной блочной модели.&lt;/p&gt;&#xA;&lt;h3 id=&#34;шаг-третий---применение-автоматических-отступов&#34;&gt;Шаг третий - Применение автоматических отступов&lt;/h3&gt;&#xA;&lt;p&gt;Если во флекс-контейнере остаётся свободное место, то автоматически применяются отступы с помощью свойства &lt;code&gt;margin&lt;/code&gt;, установленного в значение &lt;code&gt;auto&lt;/code&gt; для флекс-элементов.&lt;/p&gt;&#xA;&lt;p&gt;Во флексбоксе автоматические отступы &lt;code&gt;margin: auto&lt;/code&gt; функционируют значительно эффективнее, чем в стандартной блочной модели. Во-первых, они применяются во всех направлениях, в отличие от блочной модели, где они работают только по горизонтали. Во-вторых, автоматические отступы могут взаимодействовать между собой: если на одной оси присутствует несколько таких отступов (у разных элементов или с разных сторон одного элемента), то свободное пространство распределяется между ними равномерно.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Приминение гибких размеров flexbox</title>
      <link>http://localhost:1313/base_weight_flexbox2/</link>
      <pubDate>Wed, 25 Dec 2024 01:29:24 +0300</pubDate>
      <guid>http://localhost:1313/base_weight_flexbox2/</guid>
      <description>&lt;p&gt;Алгоритм расчёта размеров флекс-элементов и их распределения внутри флекс-контейнера включает три последовательных этапа. Этот процесс значительно сложнее, чем в традиционной блочной модели.&lt;/p&gt;&#xA;&lt;h3 id=&#34;шаг-второй---применение-гибких-размеров&#34;&gt;Шаг второй - Применение гибких размеров&lt;/h3&gt;&#xA;&lt;p&gt;Начнём с примера. Ширина флекс-контейнера составляет 500px. Внутри него находятся три флекс-элемента, каждый из которых имеет исходный базовый размер 100px. Отступы &lt;code&gt;padding&lt;/code&gt; отсутствуют. Таким образом, во флекс-контейнере остаётся 500px - 300px = 200px свободного места.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/base_weight_flex2.png&#34; alt=&#34;Применение гибких размеров&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;В стандартной блочной модели эти 200px остались бы неиспользованными, так как размеры элементов определяются за один проход. Во флексбоксе же размеры элементов пересчитываются несколько раз. На втором этапе происходит перераспределение свободного пространства, но только для «гибких» элементов. При этом «гибкость» может быть двух типов: на растяжение и на сжатие.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Исходные базовые размеры flex-элементов</title>
      <link>http://localhost:1313/base_weight_flexbox/</link>
      <pubDate>Tue, 24 Dec 2024 06:29:24 +0300</pubDate>
      <guid>http://localhost:1313/base_weight_flexbox/</guid>
      <description>&lt;p&gt;Алгоритм расчёта размеров флекс-элементов и их распределения внутри флекс-контейнера включает три последовательных этапа. Этот процесс значительно сложнее, чем в традиционной блочной модели.&lt;/p&gt;&#xA;&lt;h3 id=&#34;первый-шаг---определение-исходных-базовых-размеров-флекс-элементов&#34;&gt;Первый шаг - Определение исходных базовых размеров флекс-элементов&lt;/h3&gt;&#xA;&lt;p&gt;Базовый размер — это размер элемента, измеряемый вдоль основной оси.&lt;/p&gt;&#xA;&lt;p&gt;Исходный базовый размер — это размер, который флекс-элемент принимает без использования дополнительных функций флекс-модели. Он определяется стандартными свойствами блочной модели (например, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;) и содержимым элемента.&lt;/p&gt;&#xA;&lt;p&gt;Если основная ось расположена горизонтально, то на исходный базовый размер влияют:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойство Display в CSS</title>
      <link>http://localhost:1313/svoistvo_display_v_css/</link>
      <pubDate>Sat, 14 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/svoistvo_display_v_css/</guid>
      <description>&lt;p&gt;К каждому HTML элементу на странице соответствует прямоугольная область.&#xA;Такие области называют боксами.&lt;/p&gt;&#xA;&lt;p&gt;По умолчанию все HTML элементы обладают определенными боксами.&#xA;Но стандартное отображение элементов бокса всегда можно&#xA;поменять с помощью CSS-свойства Display.&lt;/p&gt;&#xA;&lt;p&gt;Тип отображения сразу влияет на две вещи в потоке документа:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 На расположение самого бокса.&lt;/li&gt;&#xA;&lt;li&gt;2 На расположение дочерних элементов внутри бокса.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;К примеру у элемента &lt;code&gt;li&lt;/code&gt; тип отображения по умолчанию&#xA;&lt;code&gt;display: block&lt;/code&gt; Это означает что элементы списка отображаются один под другим на странице.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Страница обо мне</title>
      <link>http://localhost:1313/me/</link>
      <pubDate>Thu, 12 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/me/</guid>
      <description>&lt;h2&gt;about&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;Привет, это Dxrkd3v 👋&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;И я веб-разработчик.&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;hr style=&#34;width: 100px;&#34;&gt;&#xD;&#xA;&lt;h3 class=&#34;mt2&#34; style=&#34;padding-top: 20px;&#34;&gt;profiles&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;img class=&#34;logos&#34; src=&#34;http://localhost:1313/images/Github-Dark.svg&#34; width=&#34;22px&#34; height=&#34;22px&#34; /&gt; &lt;a href=&#34;https://github.com/e1hxm&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; &amp;rsaquo; Исходники 😊&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;img class=&#34;logos&#34; src=&#34;http://localhost:1313/images/Codewars.svg&#34; width=&#34;22px&#34; height=&#34;22px&#34; /&gt; &lt;a href=&#34;https://www.codewars.com/users/e1hxm&#34; target=&#34;_blank&#34;&gt;Codewars&lt;/a&gt; &amp;rsaquo; 7 kyu 😅&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;img class=&#34;logos&#34; src=&#34;http://localhost:1313/images/htmlacademy.png&#34; width=&#34;22px&#34; height=&#34;22px&#34; /&gt; &lt;a href=&#34;https://htmlacademy.ru/profile/elham&#34; target=&#34;_blank&#34;&gt;HTMLAcademy&lt;/a&gt; &amp;rsaquo; 400+ Задач&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;hr style=&#34;width: 100px;&#34;&gt;&#xD;&#xA;&lt;h3 class=&#34;mt2&#34; style=&#34;padding-top: 10px; padding-bottom: 0px&#34;&gt;skills&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;Технологии которые я изучил или в процессе изучения&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;div class=&#34;tech_logos&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;http://localhost:1313/images/Git.svg&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;http://localhost:1313/images/Github-Dark.svg&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;http://localhost:1313/images/Markdown-Dark.svg&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;http://localhost:1313/images/CSS.svg&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;http://localhost:1313/images/HTML.svg&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;http://localhost:1313/images/JavaScript.svg&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;http://localhost:1313/images/py.png&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;http://localhost:1313/images/php.webp&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;http://localhost:1313/images/sql.png&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;http://localhost:1313/images/Sass.svg&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;http://localhost:1313/images/tw.webp&#34;&gt;&#xD;&#xA;    &lt;img src=&#34;http://localhost:1313/images/VSCode-Dark.svg&#34;&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;hr style=&#34;width: 100px;&#34;&gt;&#xD;&#xA;&lt;h3 class=&#34;mt2&#34; style=&#34;padding-top: 10px; padding-bottom: 0px&#34;&gt;education&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;Прогресс обучения&lt;/p&gt;&#xD;&#xA;&lt;h4 class=&#34;mt2&#34;&gt;February 2022&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;li class=&#34;mb0.5&#34;&gt;&#xD;&#xA;&lt;a href=&#34;https://htmlacademy.ru/profession/frontender&#34; target=&#34;_blank&#34;&gt;&#xD;&#xA;HTMLAcademy&lt;/a&gt;&#xD;&#xA;&amp;rsaquo; Курс по Frontend разработке от HTMLAcademy&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;h4 class=&#34;mt2&#34;&gt;January 2022&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;li class=&#34;mb0.5&#34;&gt;&#xD;&#xA;&lt;a href=&#34;https://synergy.ru&#34; target=&#34;_blank&#34;&gt;&#xD;&#xA;Synergy University&lt;/a&gt;&#xD;&#xA;&amp;rsaquo; Университет Синергия. &#xD;&#xA;Факультет информационных технологий.&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;h4 class=&#34;mt2&#34;&gt;December 2021&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;li&gt;&#xD;&#xA;&lt;a href=&#34;https://www.udemy.com/course/php-v7-mysql/&#34; target=&#34;_blank&#34;&gt;&#xD;&#xA;Udemy&lt;/a&gt;&#xD;&#xA;&amp;rsaquo; Курс по Backend разработке &#34;PHP + MySQL&#34;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;h4 class=&#34;mt2&#34;&gt;November 2021&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;li&gt;&#xD;&#xA;&lt;a href=&#34;https://www.udemy.com/course/bestpython/&#34; target=&#34;_blank&#34;&gt;&#xD;&#xA;Udemy&lt;/a&gt;&#xD;&#xA;&amp;rsaquo; Курс по Backend разработке &#34;Python, SQL и PostgreSQL&#34;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;h4 class=&#34;mt2&#34;&gt;October 2021&lt;/h4&gt;&#xD;&#xA;&lt;ul&gt;&#xD;&#xA;&lt;li&gt;&#xD;&#xA;&lt;a href=&#34;https://www.udemy.com/course/javascript_full/&#34; target=&#34;_blank&#34;&gt;&#xD;&#xA;Udemy&lt;/a&gt;&#xD;&#xA;&amp;rsaquo; Курс по Frontend разработке&#xD;&#xA;&#34;JavaScript + React&#34;&#xD;&#xA;&lt;/li&gt;&#xD;&#xA;&lt;/ul&gt;&#xD;&#xA;&lt;hr style=&#34;width: 100px;&#34;&gt;&#xD;&#xA;&lt;h3 class=&#34;mt2&#34; style=&#34;padding-top: 10px; padding-bottom: 0px&#34;&gt;&#xD;&#xA;projects&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;Список проектов&#xD;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Страница с дополнительными разделами</title>
      <link>http://localhost:1313/links/</link>
      <pubDate>Thu, 12 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/links/</guid>
      <description>&lt;div&gt;&#xD;&#xA;&lt;h2 class=&#34;mt5&#34;&gt;&#xD;&#xA;    links&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;Ссылки на дополнительные разделы блога и &#xD;&#xA;полезные ресурсы.&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;hr style=&#34;width: 100px;&#34;&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;Лекции из университетов, института и курсов&#xD;&#xA;не касающиеся кода.&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;a href=&#34;http://localhost:1313/the_hollow_crown/&#34;&gt;The Hollow Crown&lt;/a&gt; &amp;rsaquo; Пустая Корона&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;a href=&#34;http://localhost:1313/sma/&#34;&gt;Special Math&lt;/a&gt; &amp;rsaquo; Специальная математика и основы статистики&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;a href=&#34;http://localhost:1313/history/&#34;&gt;History&lt;/a&gt; &amp;rsaquo; История&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;a href=&#34;http://localhost:1313/philosophy/&#34;&gt;Philosophy&lt;/a&gt; &amp;rsaquo; Философия&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;a href=&#34;http://localhost:1313/english/&#34;&gt;English&lt;/a&gt; &amp;rsaquo; Английский&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;a href=&#34;http://localhost:1313/economy/&#34;&gt;Economy&lt;/a&gt; &amp;rsaquo; Экономика&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;hr style=&#34;width: 100px;&#34;&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;Полезные ссылки&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;📌 &lt;a href=&#34;http://localhost:1313/gitbook/&#34;&gt;Git&lt;/a&gt; &amp;rsaquo; Git Commands&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;📌 &lt;a href=&#34;http://localhost:1313/vimbook/&#34;&gt;Vim&lt;/a&gt; &amp;rsaquo; Vim Keybindings&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;📌 &lt;a href=&#34;http://localhost:1313/linux/&#34;&gt;Linux&lt;/a&gt; &amp;rsaquo; Linux Commands&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;hr style=&#34;width: 100px;&#34;&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;a href=&#34;https://mastery.games/flexboxzombies/&#34; target=&#34;_blank&#34;&gt;FlexboxZombies&lt;/a&gt; &amp;rsaquo; Тренажер по Флексам&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;a href=&#34;https://codingfantasy.com/games/flexboxadventure/play&#34; target=&#34;_blank&#34;&gt;FlexboxAdventure&lt;/a&gt; &amp;rsaquo; Тренажер по Флексам&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;a href=&#34;http://www.flexboxdefense.com/&#34; target=&#34;_blank&#34;&gt;FlexboxDefense&lt;/a&gt; &amp;rsaquo; Тренажер по Флексам&#xD;&#xA;&lt;/p&gt;&#xD;&#xA;&lt;p&gt;&#xD;&#xA;&lt;a href=&#34;https://cssgridgarden.com&#34; target=&#34;_blank&#34;&gt;GridGarden&lt;/a&gt; &amp;rsaquo; Тренажер по Гридам&#xD;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Общественное воспроизводство</title>
      <link>http://localhost:1313/obchestvennoe_vosproizvodstvo/</link>
      <pubDate>Wed, 11 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/obchestvennoe_vosproizvodstvo/</guid>
      <description>&lt;p&gt;&#xD;&#xA;                Воспроизводство, или общественное воспроизводство - &#xD;&#xA;                непрерывно возобновляемый процесс производства. &#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;                Процесс общественного воспроизводства включает следующие&#xD;&#xA;                стандартные фазы: &#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;ul&gt;&#xD;&#xA;                &lt;li&gt;&#xD;&#xA;                  &lt;p&gt;&#xD;&#xA;                      1 Прооизводство - прогресс изготовления товаров и оказания услуг&#xD;&#xA;                 &lt;/p&gt;&#xD;&#xA;                &lt;/li&gt;&#xD;&#xA;                &lt;li&gt;&#xD;&#xA;                  &lt;p&gt;&#xD;&#xA;                      2 Распреление - определение доли от того количества в котором&#xD;&#xA;                      каждый субъект принимает участие в производстве продукта. &#xD;&#xA;                      Это выражается в распределении экономических ресурсов между &#xD;&#xA;                      экономическими субъектами и отраслями экономики, распрелении &#xD;&#xA;                      благ и доходов в обществе.    &#xD;&#xA;                  &lt;/p&gt;&#xD;&#xA;                &lt;/li&gt;&#xD;&#xA;                &lt;li&gt;&#xD;&#xA;                  &lt;p&gt;&#xD;&#xA;                      3 Обмен или перераспределение - это перемещение благ от одних &#xD;&#xA;                      владельцев к другим который реализуется через обмен &#xD;&#xA;                      деятельностью и ее продуктами между экономическими субъектами. &#xD;&#xA;                  &lt;/p&gt;</description>
    </item>
    <item>
      <title>Субъекты экономики</title>
      <link>http://localhost:1313/subject_of_economy/</link>
      <pubDate>Mon, 09 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/subject_of_economy/</guid>
      <description>&lt;p&gt;&#xD;&#xA;              Определения понятия &#34;экономический субъект&#34;:&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Экономический субъект &amp;rsaquo; юридическое или физическое лицо&#xD;&#xA;              которое считается носителем прав в том числе прав собственности. &#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Экономический субъект &amp;rsaquo; это тот кто ставит перед собой &#xD;&#xA;              определенные цели, принимает независимые хозяйственные решения &#xD;&#xA;              и реализует свои хозяйственные планы, учавствуя в производстве,&#xD;&#xA;              распределении, обмене и потреблении экономических благ. &#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;h3&gt;Виды экономических благ&lt;/h3&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Выделяют следующие виды экономических субъектов: домохозяйство,&#xD;&#xA;              фирма и государство.  &#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Домохозяйство &amp;rsaquo; субъект, состоящий из одного индивида или&#xD;&#xA;              нескольких индивидов (семья) ведущих совместное хозяйство, &#xD;&#xA;              обладающий разными экономическими ресурсами (труд, капитал, земля)&#xD;&#xA;              имеющий основной целью максимизацию своего потребления, принимающий &#xD;&#xA;              самостоятельные решения для достижения этой цели и ограниченный &#xD;&#xA;              в ее достижении своими доходами, формирующий спрос на экономические блага. &#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Границы производственных возможностей</title>
      <link>http://localhost:1313/gpv/</link>
      <pubDate>Sat, 07 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/gpv/</guid>
      <description>&lt;p&gt;&#xD;&#xA;              Границы производственных возможностей (ГПВ) &amp;rsaquo; геометрическое место точек,&#xD;&#xA;              характеризующих альтернативные комбинации производства двух видов благ. Она&#xD;&#xA;              ограничивает область производственных возможностей, так что любая точка на ГПВ&#xD;&#xA;              показывает предельно возможное по ресурсным ограничениям сочетание объемов&#xD;&#xA;              производства двух продуктов.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Если экономика работает эффективно, полностью используя доступные ограниченные ресурсы&#xD;&#xA;              с максимально возможным результатом, то выпуск товаров соответствует точкам на границе&#xD;&#xA;              производственных возможностей отражающим эффективный уровень выпуска.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Граница производственных возможностей считается иллюстрацией четырех фундаментальных&#xD;&#xA;              положений&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Последствия ограниченности экономических ресурсов</title>
      <link>http://localhost:1313/ogranichenie_resursov/</link>
      <pubDate>Wed, 04 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/ogranichenie_resursov/</guid>
      <description>&lt;p&gt;Ограниченность экономических ресурсов ведет к следующим последствиям:&lt;/p&gt;&#xD;&#xA;            &lt;ul&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;Все экономические ресурсы &amp;lsaquo; это объект чьей-то собственности&lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;&#xD;&#xA;                  Практически каждый экономический ресурс может быть использован разными способами,&#xD;&#xA;                  то есть для производства разнообразных благ.&#xD;&#xA;                &lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;&#xD;&#xA;                  При выборе того или иного способа &#xD;&#xA;                  использования отдельного ресурса &#xD;&#xA;                  приоходится отказываться от его &#xD;&#xA;                  приминения для выпуска других товаров. &#xD;&#xA;                &lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;&#xD;&#xA;                  Существует необходимость выбора&#xD;&#xA;                  наилучшего варианта использования &#xD;&#xA;                  экономического ресурса из всех возможных. &#xD;&#xA;                &lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;            &lt;/ul&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Экономический выбор наилучшего варианта &#xD;&#xA;              использования ресурсов в каждом конкретном&#xD;&#xA;              случае напрвлен на максимизацию выгоды&#xD;&#xA;              в условиях ограниченности факторов производства. &#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Факторные доходы</title>
      <link>http://localhost:1313/factornye_dohody/</link>
      <pubDate>Wed, 04 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/factornye_dohody/</guid>
      <description>&lt;p&gt;&#xD;&#xA;              Всякая экономическая деятельность базируется на приминении имеющихся экономических&#xD;&#xA;              ресурсов для получения за счет этого соответствующего дохода.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Факторные доходы в экономике &amp;rsaquo; денежные поступления, которые получает&#xD;&#xA;              собственник ресурсов от их использования в производственном процессе.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              На практике выделяют несколько типов вознагрождений в качестве факторных доходов, в&#xD;&#xA;              зависимости от вида факторов проиозводства:&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;ul&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;&#xD;&#xA;                  Рента &amp;rsaquo; (например &#34;земельная&#34; или &#34;горная&#34;) вознаграждение за использование&#xD;&#xA;                  природных ресурсов.&#xD;&#xA;                &lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;Процент &amp;rsaquo; вознаграждение за использование денежного капитала&lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;Зароботная плата &amp;rsaquo; вознаграждение за труд&lt;/p&gt;</description>
    </item>
    <item>
      <title>Математика для анализа данных</title>
      <link>http://localhost:1313/first/</link>
      <pubDate>Mon, 02 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/first/</guid>
      <description>&lt;p&gt;Начало сессии и нового предмета - &amp;ldquo;Математика для&#xA;анализа данных&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Математика для анализа данных состоит из базовых&#xA;вещей. Нам придется погрузиться в некоторые детали.&lt;/p&gt;&#xA;&lt;p&gt;Эти знания пригодятся тем кто собирается&#xA;работать аналитиком данных и для тех разработчиков&#xA;которые будут иметь дело с ИИ.&lt;/p&gt;&#xA;&lt;p&gt;Поговорим для начала про линейную алгебру.&lt;/p&gt;&#xA;&lt;p&gt;Это такой небольшой модуль, который будет основой&#xA;для работы с нашими данными.&lt;/p&gt;&#xA;&lt;p&gt;Обычно высшая математика начинается с линейной&#xA;алгебры, мы тоже начнем с нее.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Экономические блага</title>
      <link>http://localhost:1313/economic_benifits/</link>
      <pubDate>Mon, 02 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/economic_benifits/</guid>
      <description>&lt;p&gt;Классификация благ в экономике&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Каждый субъект экономики обладает своими особыми интересами.&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Для удовлетворения потребностей могут использоваться доступные ресурсы, среди которых&#xD;&#xA;              и всевозможные блага.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Блага &amp;rsaquo; ресурсы, имеющие полезность и удовлетворяющие определенную потребность.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Благо &amp;rsaquo; средство удовлетворения потребностей людей.&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Важно, что в экономике термин «благо» не имеет морально-этической окраски.&#xD;&#xA;              Разнообразие потребностей определяет и огромное разнообразие возможных благ.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Для экономики ключевое значение разделение всех благ на два типа: свободные и&#xD;&#xA;              экономические.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Первый тип &amp;rsaquo; свободные, или неэкономические. Это блага, которые природа дает в&#xD;&#xA;              неограниченном количестве и которые есть в избытке по сравнению с потребностями&#xD;&#xA;              общества. Например, солнечный свет, атмосферный воздух или вода из природных&#xD;&#xA;              источников.&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Экономические ресурсы</title>
      <link>http://localhost:1313/economic_resourses/</link>
      <pubDate>Mon, 02 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/economic_resourses/</guid>
      <description>&lt;p&gt;Для создания благ нужны экономические ресурсы.&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Экономические ресурсы &amp;rsaquo; источники, обеспечивающие производство. Экономические&#xD;&#xA;              ресурсы могут быть представлены основными элементами экономического потенциала страны,&#xD;&#xA;              которыми она располагает, и которые используются для достижения конкретных целей&#xD;&#xA;              экономического и социального развития.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Наряду с понятием &#34;экономические ресурсы&#34;, используется термин &#34;факторы производства&#34;.&#xD;&#xA;              Их отличие в том, что ресурсы означают экономический потенциал — те средства, которые&#xD;&#xA;              могут быть вовлечены в производство, а факторы производства — те ресурсы, которые уже&#xD;&#xA;              реально вовлечены в процесс производства.&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Сущность экономики</title>
      <link>http://localhost:1313/economy_science/</link>
      <pubDate>Sun, 01 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/economy_science/</guid>
      <description>&lt;p&gt;Экономика может рассматриваться в двух разных значениях:&lt;/p&gt;&#xD;&#xA;            &lt;ul&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;1 хозяйство&lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;            &lt;/ul&gt;&#xD;&#xA;            &lt;ul&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;2 наука&lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;            &lt;/ul&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Экономика как хозяйство &amp;rsaquo; организованная деятельность людей, направленная на&#xD;&#xA;              производство, распределение, обмен и потребление экономических благ с целью&#xD;&#xA;              удовлетворения потребностей отдельных индивидов и общества в целом.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Экономика как наука &amp;rsaquo; наука, которая изучает законы функционирования&#xD;&#xA;              экономики-хозяйства, проблемы ее функционирования и способы их разрешения в&#xD;&#xA;              условияхограниченностиэкономических ресурсов.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              В свою очередь, современная экономика как наука структурно делится на два раздела —&#xD;&#xA;              микроэкономику и макроэкономику, отличающиеся масштабом изучаемых явлений и процессов.&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Экономические потребности</title>
      <link>http://localhost:1313/economic_needs/</link>
      <pubDate>Sun, 01 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/economic_needs/</guid>
      <description>&lt;p&gt;&#xD;&#xA;              Экономика существует потому, что, с одной стороны, человек испытывает определенные&#xD;&#xA;              потребности — для жизни ему нужны еда, жилье, одежда, обувь, знания, безопасность. С&#xD;&#xA;              другой стороны, для удовлетворения этих потребностей нужны конкретные блага — товары и&#xD;&#xA;              услуги, а их нужно произвести.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Экономические потребности имеют объективный характер и выражают недостаток&#xD;&#xA;              необходимого для поддержания жизнедеятельности и развития отдельного индивида,&#xD;&#xA;              социальной группы или общества в целом. Такие потребности выступают как внутренний&#xD;&#xA;              мотив, побуждающий к экономической деятельности.&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Сетки страниц и поток документа</title>
      <link>http://localhost:1313/setki_stranits/</link>
      <pubDate>Wed, 27 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/setki_stranits/</guid>
      <description>&lt;p&gt;Лекция в HTML Academy про сетки страниц&lt;/p&gt;&#xA;&lt;p&gt;Сеткой или раскладкой обычно обозначают структуру взаимного расположения крупных&#xA;визуальных блоков на странице.&lt;/p&gt;&#xA;&lt;p&gt;Представим, что макет мысленно разбивается на не пересекающиеся прямоугольники.&lt;/p&gt;&#xA;&lt;p&gt;Сначала выделяются самые большие области, затем эти области делятся на более мелкие, и&#xA;так далее, пока не будут выделены самые маленькие прямоугольники, которые обозначают&#xA;отдельные слова или элементы.&lt;/p&gt;&#xA;&lt;p&gt;В итоге вся страница будет выглядеть как набор вложенных друг в друга прямоугольников,&#xA;начиная от самых крупных и заканчивая самыми мелкими.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Введение в экономику</title>
      <link>http://localhost:1313/economy_entry/</link>
      <pubDate>Sun, 24 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/economy_entry/</guid>
      <description>&lt;p&gt;Альтернативная стоимость › стоимость тех альтернативных способов использования&#xA;некоторого экономического ресурса, от которых придется отказаться ради выбранного&#xA;варианта.&lt;/p&gt;&#xA;&lt;p&gt;Блага › средство удовлетворения потребностей людей: ресурсы, которые полезность&#xA;и удовлетворяют определенную потребность.&lt;/p&gt;&#xA;&lt;p&gt;Время › универсальный ресурс, с использованием которого протекают все процессы&#xA;в природе и обществе, и отличающийся строгой ограниченностью, необратимостью и&#xA;невоспроизводимостью.&lt;/p&gt;&#xA;&lt;p&gt;Государство › субъект, представленный правительственными учреждениями и&#xA;организациями, государственными предприятиями, располагающий экономической,&#xA;юридической и политической властью и реализующий управление на разных уровнях.&#xA;Государство выступает в качестве основного собственника, главного предпринимателя и&#xA;крупного потребителя. Оно имеет в качестве основной цели максимизацию общественной&#xA;полезности через обеспечение экономического и социального прогресса общества и для ее&#xA;достижения выполняющий функции по обеспечению нормального функционирования рыночной&#xA;экономики.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Map в JavaScript</title>
      <link>http://localhost:1313/map_v_javascript/</link>
      <pubDate>Sat, 23 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/map_v_javascript/</guid>
      <description>&lt;p&gt;Task в RS School по JavaScript про Map&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Для работы со сложными структурами данных, такими как массивы и объкты, принято&#xD;&#xA;              использовать Map и Set&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Map — это коллекция, предназначенная для хранения данных любого типа в виде пар [ключ,&#xD;&#xA;              значение].&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Каждое значение сохраняется по уникальному ключу, который затем используется для&#xD;&#xA;              доступа к этому значению. При этом ключи также могут быть любого типа.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Методы и свойства Map&lt;/p&gt;&#xD;&#xA;            &lt;ul&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;new Map() &amp;rsaquo; создаёт коллекцию&lt;/p&gt;</description>
    </item>
    <item>
      <title>Set в JavaScript</title>
      <link>http://localhost:1313/set_v_javascript/</link>
      <pubDate>Sat, 23 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/set_v_javascript/</guid>
      <description>&lt;p&gt;Task в RS School по JavaScript про Set&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Объект Set — это уникальный тип коллекции, представляющий собой «множество» значений,&#xD;&#xA;              в котором каждое значение хранится только один раз и не имеет ключей.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Основные методы Set&lt;/p&gt;&#xD;&#xA;            &lt;ul&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;&#xD;&#xA;                  &#34;new Set(iterable)&#34; &amp;rsaquo; создаёт Set, и если в качестве аргумента был&#xD;&#xA;                  предоставлен итерируемый объект, обычно это [массив], то копирует его значения в&#xD;&#xA;                  новый Set.&#xD;&#xA;                &lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;&#xD;&#xA;                  &#34;set.add(value)&#34; &amp;rsaquo; Добавляет значение в множество (если оно уже&#xD;&#xA;                  присутствует, изменений не происходит) и возвращает сам объект Set.&#xD;&#xA;                &lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойство align-content</title>
      <link>http://localhost:1313/align_content_css/</link>
      <pubDate>Sat, 23 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/align_content_css/</guid>
      <description>&lt;p&gt;Лекция в HTML Academy про align-content&lt;/p&gt;&#xA;&lt;p&gt;Свойство &lt;code class=&#34;code_line&#34;&gt;justify-content&lt;/code&gt; управляет распределением флекс-элементов вдоль главной оси,&#xA;а &lt;code class=&#34;code_line&#34;&gt;align-content&lt;/code&gt; — выравниванием рядов флекс-элементов вдоль поперечной оси. Оба&#xA;свойства имеют схожие значения:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;1 &lt;code class=&#34;code_line&#34;&gt;flex-start&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;2 &lt;code class=&#34;code_line&#34;&gt;flex-end&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;3 &lt;code class=&#34;code_line&#34;&gt;center&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;4 &lt;code class=&#34;code_line&#34;&gt;space-between&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;5 &lt;code class=&#34;code_line&#34;&gt;stretch&lt;/code&gt; - доступно только для &lt;code class=&#34;code_line&#34;&gt;align-content&lt;/code&gt; и является значением по умолчанию.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Свойство &lt;code class=&#34;code_line&#34;&gt;align-content&lt;/code&gt; переопределяет значение &lt;code class=&#34;code_line&#34;&gt;align-items&lt;/code&gt;, которое управляет&#xA;выравниванием отдельных флекс-элементов вдоль поперечной оси. Это происходит как для&#xA;одного ряда флекс-элементов, так и для нескольких рядов.&lt;/p&gt;&#xA;&lt;p&gt;Однако есть один нюанс: &lt;code class=&#34;code_line&#34;&gt;align-content&lt;/code&gt; перестаёт работать, если для флекс-контейнера&#xA;установлено свойство &lt;code class=&#34;coe_line&#34;&gt;flex-wrap: nowrap&lt;/code&gt;. Это происходит потому, что в таком случае&#xA;высота строки равна высоте флекс-контейнера, и на поперечной оси не остаётся&#xA;свободного пространства.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойство justify-content</title>
      <link>http://localhost:1313/svoistvo_justify_content/</link>
      <pubDate>Thu, 21 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/svoistvo_justify_content/</guid>
      <description>&lt;p&gt;&#xD;&#xA;                            Лекция от HTMLAcademy про justify-content&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            В Flexbox есть свойства justify-content,&#xD;&#xA;                            которые позволяют равномерно&#xD;&#xA;                            распределять элементы вдоль главной оси:&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;ul&gt;&#xD;&#xA;                            &lt;li&gt;&#xD;&#xA;                                &#39;space-between&#39; — это значение,&#xD;&#xA;                                при котором расстояния между&#xD;&#xA;                                соседними элементами равны,&#xD;&#xA;                                а отступы между элементами и&#xD;&#xA;                                краями контейнера отсутствуют.&#xD;&#xA;                            &lt;/li&gt;&#xD;&#xA;                            &lt;li&gt;&#xD;&#xA;                                &#39;space-around&#39; — это значение,&#xD;&#xA;                                при котором расстояния между&#xD;&#xA;                                соседними элементами равны,&#xD;&#xA;                                а отступы между элементами и&#xD;&#xA;                                краями контейнера составляют половину&#xD;&#xA;                                расстояния между соседними элементами.&#xD;&#xA;                            &lt;/li&gt;&#xD;&#xA;                            &lt;li&gt;&#xD;&#xA;                                &#39;space-evenly&#39; — это значение,&#xD;&#xA;                                при котором расстояния&#xD;&#xA;                                между всеми элементами,&#xD;&#xA;                                включая края контейнера, равны.&#xD;&#xA;                            &lt;/li&gt;&#xD;&#xA;                        &lt;/ul&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Свойство &#39;justify-content&#39; контролирует&#xD;&#xA;                            распределение элементов вдоль главной оси и&#xD;&#xA;                            принимает пять различных значений:&#xD;&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Массивы в JavaScript</title>
      <link>http://localhost:1313/arrays_in_javascript/</link>
      <pubDate>Sun, 17 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/arrays_in_javascript/</guid>
      <description>&lt;p&gt;Task в RS School по JavaScript про Массивы&lt;/p&gt;&#xA;&lt;p&gt;Для хранения упорядоченных наборов&#xA;данных используется специальная структура,&#xA;называемая массивом (Array).&lt;/p&gt;&#xA;&lt;h3 id=&#34;создание-массива&#34;&gt;Создание массива&lt;/h3&gt;&#xA;&lt;p&gt;Для создания пустого массива можно&#xA;использовать два варианта синтаксиса:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;arr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Как правило, предпочтение&#xA;отдают второму варианту синтаксиса.&#xA;В квадратных скобках можно задать&#xA;начальные значения элементов:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Яблоко&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Апельсин&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Слива&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Нумерация элементов массива&#xA;начинается с нуля.&lt;/p&gt;&#xA;&lt;p&gt;Чтобы получить элемент,&#xA;нужно указать его индекс&#xA;в квадратных скобках:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Яблоко&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Апельсин&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Слива&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Яблоко&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Апельсин&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fruits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Слива&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Элемент массива можно&#xA;заменить следующим образом:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Объекты в JavaScript</title>
      <link>http://localhost:1313/objects_v_javascript/</link>
      <pubDate>Sun, 17 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/objects_v_javascript/</guid>
      <description>&lt;p&gt;Task в RS School по JavaScript про Объекты&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Объекты служат для хранения коллекций различных значений и более сложных сущностей. В&#xD;&#xA;              JavaScript объекты играют важную роль и являются одной из ключевых составляющих языка.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Объект можно создать с помощью фигурных скобок {…}, при этом список свойств является&#xD;&#xA;              необязательным.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Свойство объекта представляет собой пару «ключ: значение», где ключ — это строка (или&#xD;&#xA;              «имя свойства»), а значение может быть любым типом данных.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Пустой объект можно создать, применив один из двух вариантов синтаксиса:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойство flex-wrap </title>
      <link>http://localhost:1313/svoistvo_flex_wrap/</link>
      <pubDate>Wed, 13 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/svoistvo_flex_wrap/</guid>
      <description>&lt;p&gt;Лекция из HTML Academy про свойство flex-wrap в CSS&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Если флекс-элементов в контейнере станет больше чем он сможет вместить то произойдет&#xD;&#xA;              следющее:&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;ul&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;Элементы будут сжиматься до самого возможного минимального значения&lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;&#xD;&#xA;                  Даже если указать явную величину ширины для элементов, механизм flexbox может их&#xD;&#xA;                  уменьшить&#xD;&#xA;                &lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;              &lt;li&gt;&#xD;&#xA;                &lt;p&gt;&#xD;&#xA;                  Если элементы не умещаются в контейнер даже после уменьшения, они выйдут за его&#xD;&#xA;                  границы, но останутся в одном ряду.&#xD;&#xA;                &lt;/p&gt;&#xD;&#xA;              &lt;/li&gt;&#xD;&#xA;            &lt;/ul&gt;&#xD;&#xA;            &lt;p&gt;Это поведение можно изменить с помощью свойства flex-wrap у флекс-контейнера.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Типы данных в JavaScript</title>
      <link>http://localhost:1313/tipy_dannyh_v_javascript/</link>
      <pubDate>Tue, 12 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/tipy_dannyh_v_javascript/</guid>
      <description>&lt;p&gt;Task в RS School по JavaScript&lt;/p&gt;&#xA;&lt;p&gt;В JavaScript каждое значение всегда относится к определенному типу данных, например&#xA;как строка или число.&lt;/p&gt;&#xA;&lt;p&gt;Существует всего 8 типов данных.&lt;/p&gt;&#xA;&lt;p&gt;Переменная может хранить в себе любой тип данных.&lt;/p&gt;&#xA;&lt;p&gt;В одном участке кода в переменной может храниться строка, а другой уже число.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;some&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Строка   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;some&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Число&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Из за такой особенности язык программирования JavaScript называется &amp;ldquo;динамически&#xA;типизированным&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Это означает, что хотя типы данных существуют, переменные не привязаны к какому-либо&#xA;конкретному типу.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Боксовая модель в CSS</title>
      <link>http://localhost:1313/boxmodul_v_css/</link>
      <pubDate>Mon, 11 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/boxmodul_v_css/</guid>
      <description>&lt;p&gt;Лекция в HTMLAcademy про боксовую модель документа в CSS&lt;/p&gt;&#xA;&lt;p&gt;Каждому элементу на веб-странице соответствует прямоугольная область, известная как&#xA;бокс (от английского &amp;ldquo;box&amp;rdquo; — «коробка»).&lt;/p&gt;&#xA;&lt;p&gt;Бокс включает в себя:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;1 Содержимое (content) — непосредственно контент элемента;&lt;/li&gt;&#xA;&lt;li&gt;2 Внутренние отступы (padding) — пространство между содержимым и рамкой;&lt;/li&gt;&#xA;&lt;li&gt;3 Рамка (border) — линия, окружающая содержимое и внутренние отступы;&lt;/li&gt;&#xA;&lt;li&gt;4 Внешние отступы (margin) — пространство за пределами рамки, отделяющее данный&#xA;элемент от других.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../images/box-model.png&#34; alt=&#34;Боксовая модель в CSS&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Функции в JavaScript</title>
      <link>http://localhost:1313/function_javascript/</link>
      <pubDate>Mon, 11 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/function_javascript/</guid>
      <description>&lt;p&gt;Task в RS School по JavaScript про Функции&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Чтобы избежать повторения одного и того же кода в разных частях программы, были&#xD;&#xA;              созданы функции.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Функции служат основными &#34;кирпичиками&#34;, из которых строится программа.&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Вот несколько примеров встроенных функций:&lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;alert(msg);&#xD;&#xA;prompt(msg, default);&#xD;&#xA;confirm(question);&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;На самом деле, встроенных фукций в Javascript гораздо больше.&lt;/p&gt;&#xD;&#xA;            &lt;h3&gt;Объявление Функции&lt;/h3&gt;&#xD;&#xA;            &lt;p&gt;Для создания функции можно использовать конструкцию:&lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;function showMsg() {&#xD;&#xA;  console.log( &#39;Всем привет!&#39; );&#xD;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;В этом примере список аргументов пустой&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Сначала указывается ключевое слово &#39;function&#39;, затем имя функции, далее список&#xD;&#xA;              параметров в круглых скобках, разделенных запятыми и, наконец, код функции, также&#xD;&#xA;              известный как &#39;тело функции&#39;, заключенный в фигурные скобки.&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Linkin Park - A Place For My Head</title>
      <link>http://localhost:1313/linkin_park_a_place_for_my_head/</link>
      <pubDate>Sat, 09 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/linkin_park_a_place_for_my_head/</guid>
      <description>&lt;p&gt;&#xD;&#xA;              &lt;!-- Добавим песню --&gt;&#xD;&#xA;              &lt;iframe&#xD;&#xA;                frameborder=&#34;0&#34;&#xD;&#xA;                allow=&#34;clipboard-write&#34;&#xD;&#xA;                style=&#34;width: 100%; height: 185px&#34;&#xD;&#xA;                width=&#34;100%&#34;&#xD;&#xA;                height=&#34;100px&#34;&#xD;&#xA;                src=&#34;https://music.yandex.ru/iframe/track/178496/12360955&#34;&#xD;&#xA;              &gt;&#xD;&#xA;              &lt;/iframe&gt;&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;h3&gt;[Verse:]&lt;/h3&gt;&#xD;&#xA;            &lt;p&gt;I watch how the moon&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Я смотрю как луна&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Sits in the sky on a dark night&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Сидит на небе в тёмной ночи&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Shining with the light from the sun&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Сверкает светом отраженным от солнца&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;The sun doesn&#39;t give light to the moon&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Но солнце не даёт света луне&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Assuming the moon&#39;s going to owe it one&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Предпологая, что луна теперь у него в долгу&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;It makes me think of how you act to me&lt;/p&gt;</description>
    </item>
    <item>
      <title>Поперечная ось flexbox</title>
      <link>http://localhost:1313/axis_flexbox/</link>
      <pubDate>Sun, 03 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/axis_flexbox/</guid>
      <description>&lt;p&gt;Лекция из HTML Academy про поперечную ось flexbox в CSS&lt;/p&gt;&#xA;&lt;p&gt;Во флексбоксе вместо направлений «верх» и «низ» используется понятие «поперечная ось».&lt;/p&gt;&#xA;&lt;p&gt;Вдоль этой оси происходит «вертикальное» выравнивание элементов.&lt;/p&gt;&#xA;&lt;p&gt;Пример на картинке:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../images/axis-flexbox.png&#34; alt=&#34;Поперечная ось flexbox&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Поперечная ось всегда перпендикулярна главной оси и поворачивается вместе с ней если:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;1 Главная ось направлена горизонтально, то поперечная ось смотрит вниз.&lt;/li&gt;&#xA;&lt;li&gt;2 Главная ось направлена вертикально, то поперечная ось смотрит направо.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Это поведение может показаться не совсем интуитивным, и к нему нужно привыкнуть.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойство flex-direction</title>
      <link>http://localhost:1313/svoistvo_flex_direction_flexbox/</link>
      <pubDate>Sun, 03 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/svoistvo_flex_direction_flexbox/</guid>
      <description>&lt;p&gt;Лекция из HTML Academy про свойство &#34;flex-direction&#34;&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              В стандартной блочной модели направления «влево», «вправо», «вверх» и «вниз»&#xD;&#xA;              фиксированы.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Включаем flex&lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;display: flex;&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Однако внутри флекс-контейнера эти понятия могут меняться, так как в нем можно&#xD;&#xA;              изменить обычное направление потока элементов.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Меняем направление&lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;flex-direction: row; // Значение по умолчанию   &lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Во флексбоксе вместо направлений «лево» и «право» используется понятие «главная ось».&#xD;&#xA;              Поток флекс-элементов проходит вдоль главной оси от её начала к её концу.&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Linkin Park - What I&#39;ve Done</title>
      <link>http://localhost:1313/linkin_park_what_ive_done/</link>
      <pubDate>Fri, 01 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/linkin_park_what_ive_done/</guid>
      <description>&lt;p&gt;&#xD;&#xA;              &lt;!-- Добавим песню --&gt;&#xD;&#xA;              &lt;iframe&#xD;&#xA;                frameborder=&#34;0&#34;&#xD;&#xA;                style=&#34;width: 100%; height: 185px&#34;&#xD;&#xA;                width=&#34;100%&#34;&#xD;&#xA;                height=&#34;100&#34;&#xD;&#xA;                src=&#34;https://music.yandex.ru/iframe/track/170252/154525&#34;&#xD;&#xA;              &gt;&#xD;&#xA;              &lt;/iframe&gt;&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;h3&gt;[Verse:]&lt;/h3&gt;&#xD;&#xA;            &lt;p&gt;In this farewell&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;В этом прощании&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;There is no blood&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Без крови&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;There is no alibi&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Без оправданий&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#39;Cause I&#39;ve drawn regret&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Потому что я нарисовал сожаление&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;From the truth&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Из правды&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Of a thousand lies&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Среди тысячи вранья&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;So let mercy come&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Чтож пусть наступит пощада&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;And wash away&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;И сотрёт&lt;/p&gt;&#xD;&#xA;            &lt;h3&gt;[Chorus:]&lt;/h3&gt;&#xD;&#xA;            &lt;p&gt;What I&#39;ve done&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Все что я натворил&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;I&#39;ll face myself&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Я с самим собой&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;To cross out&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Чтобы вычеркнуть&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;What I&#39;ve become&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linkin Park - With You</title>
      <link>http://localhost:1313/linkin_park_with_you/</link>
      <pubDate>Tue, 29 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/linkin_park_with_you/</guid>
      <description>&lt;p&gt;&#xD;&#xA;              &lt;!-- Добавим песню --&gt;&#xD;&#xA;              &lt;iframe&#xD;&#xA;                frameborder=&#34;25px&#34;&#xD;&#xA;                style=&#34;width: 100%; height: 185px&#34;&#xD;&#xA;                width=&#34;100%&#34;&#xD;&#xA;                height=&#34;100&#34;&#xD;&#xA;                src=&#34;https://music.yandex.ru/iframe/track/178502/12360955&#34;&#xD;&#xA;              &gt;&#xD;&#xA;              &lt;/iframe&gt;&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;h3&gt;[Verse:]&lt;/h3&gt;&#xD;&#xA;            &lt;p&gt;I woke up in a dream today&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Я проснулся как во сне сегодня&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;To the cold of the static&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;В статический холод&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;And put my cold feet on the floor&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;И наступил холодными ногами на пол&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Forgot all about yesterday&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Забыл обо всем, что было вчера&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Remembering I&#39;m pretending to be where&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Вспоминая, притворяюсь что я там&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;I&#39;m not anymore&lt;/p&gt;&#xD;&#xA;            &lt;p class=&#34;gray&#34;&gt;Но это ложь&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;A little taste of hypocrisy&lt;/p&gt;</description>
    </item>
    <item>
      <title>Переменные в JavaScript</title>
      <link>http://localhost:1313/peremennye_v_javascript/</link>
      <pubDate>Tue, 29 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/peremennye_v_javascript/</guid>
      <description>&lt;p&gt;Лекция с Udemy про переменые в JavaScript&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Переменные в JavaScript - это хранилище информации. Визуально их можно представить как&#xD;&#xA;              коробки, которые что то содержат внутри себя.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Чтобы объявить переменную существует сразу 3 способа.&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;Две ключевые фразы let и const относятся к современной версии JavaScript.&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Так же есть ключевое слово var с помощью которого можно объявить переменную, но он&#xD;&#xA;              относится к устаревшей версии и использовать var не рекомендуется.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;h3&gt;let&lt;/h3&gt;&#xD;&#xA;            &lt;p&gt;Первый способ - через ключевое слово let&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flexbox начало</title>
      <link>http://localhost:1313/flexbox_nachlo/</link>
      <pubDate>Sun, 13 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/flexbox_nachlo/</guid>
      <description>&lt;p&gt;Лекция в HTMLAcademy про flexbox &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Чтобы воспользоваться уникальными свойствами флексов (от английского &#34;flexible&#34; —&#xD;&#xA;              «гибкий»), необходимо сначала с помощью свойства &#39;display&#39; изменить тип элемента:&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;display: flex;&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Контейнер с типом &#39;flex&#39; называется флекс-контейнером, а его дочерние элементы —&#xD;&#xA;              флекс-элементами.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Флекс-элементы автоматически располагаются вдоль главной оси. По умолчанию, главная&#xD;&#xA;              ось направлена слева направо.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;img src=&#34;../images/flex1.1.png&#34; /&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              По умолчанию, флекс-элементы не переносятся на новую строку и сжимаются до размера&#xD;&#xA;              своего содержимого. Из-за этой особенности, для флекс-элементов, которые используются&#xD;&#xA;              в сеточной структуре, рекомендуется явно задавать ширину.&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Grid начало</title>
      <link>http://localhost:1313/grid_nachalo/</link>
      <pubDate>Sat, 12 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/grid_nachalo/</guid>
      <description>&lt;p&gt;&#xD;&#xA;                            Лекция в HTMLAcademy про Grid&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Бокс - контейнер, &#xD;&#xA;                            который относится к типу grid, &#xD;&#xA;                            содержит дочерние элементы, &#xD;&#xA;                            называемые грид-элементами. &#xD;&#xA;                            Несмотря на то что грид-контейнер &#xD;&#xA;                            выглядит как обычный блочный элемент &#xD;&#xA;                            для других элементов, таких как основное &#xD;&#xA;                            содержимое, грид-элементы внутри &#xD;&#xA;                            него ведут себя по-другому. &#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;Например, даже строчные элементы &#xD;&#xA;                            начинают занимать всю доступную им область, &#xD;&#xA;                            а внешние отступы у элементов в грид-контейнере &#xD;&#xA;                            также ведут себя иначе.&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            По умолчанию грид-контейнер &#xD;&#xA;                            является одноколоночным. &#xD;&#xA;                            Чтобы изменить это, необходимо &#xD;&#xA;                            описать шаблон грид-контейнера. &#xD;&#xA;                            Для этого используется &#xD;&#xA;                            свойство grid-template-columns.&#xD;&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Margin и Padding в CSS</title>
      <link>http://localhost:1313/margin_and_padding/</link>
      <pubDate>Sat, 12 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/margin_and_padding/</guid>
      <description>&lt;p&gt;Лекция от HTMLAcademy про margin и padding в css&lt;/p&gt;&#xD;&#xA;            &lt;h3&gt;Свойство padding&lt;/h3&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Внутренний отступ — это пространство между содержимым элемента и его границей&#xD;&#xA;              (рамкой).&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;img src=&#34;../images/padding.png&#34; /&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Внутренние отступы элемента задаются с использованием свойства padding. Если отступы&#xD;&#xA;              одинаковы со всех сторон, можно просто указать:&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;.main__content {&#xD;&#xA;  padding: 15px;&#xD;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p&gt;Такой способ записи называется сокращённым.&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Если отступы на разных сторонах отличаются, используют полную запись, где указывают&#xD;&#xA;              внутренний отступ для каждой стороны отдельно:&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;.main__content {&#xD;&#xA;  padding-top: 5px;&#xD;&#xA;  padding-right: 10px;&#xD;&#xA;  padding-bottom: 15px;&#xD;&#xA;  padding-left: 20px;&#xD;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Свойство padding-top добавляет внутренний отступ сверху, padding-right — справа,&#xD;&#xA;              padding-bottom — снизу, а padding-left — слева.&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Единицы измерений в CSS</title>
      <link>http://localhost:1313/edinitsi_izmereniy_v_css/</link>
      <pubDate>Tue, 08 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/edinitsi_izmereniy_v_css/</guid>
      <description>&lt;p&gt;&#xD;&#xA;                            Единицы измерения в CSS &#xD;&#xA;                            применяются для задания размеров элементов, &#xD;&#xA;                            расстояний, шрифтов и других свойств. &#xD;&#xA;                            Они подразделяются на абсолютные &#xD;&#xA;                            и относительные типы.&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Лекция про пять основных единиц измерений: px, em, rem, fr, %.&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;h3&gt;Пиксели &#39;px&#39;&lt;/h3&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Пиксель может быть физическим и CSS-пикселем.&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Физический пиксель — это отдельная&#xD;&#xA;                            ячейка на матрице устройства. &#xD;&#xA;                            Например, если ширина экрана устройства &#xD;&#xA;                            составляет 480px, это означает, &#xD;&#xA;                            что по всей ширине расположено &#xD;&#xA;                            480 неделимых ячеек, где 1px равен &#xD;&#xA;                            одной такой ячейке.&#xD;&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Типы значений в CSS</title>
      <link>http://localhost:1313/tipy_snacheniy_v_css/</link>
      <pubDate>Tue, 08 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/tipy_snacheniy_v_css/</guid>
      <description>&lt;h3&gt;Абсолютные значения&lt;/h3&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Простейший тип значений — это абсолютные величины, &#xD;&#xA;                            например, пиксели. Они используются для &#xD;&#xA;                            определения размеров элементов, &#xD;&#xA;                            текста и других параметров.&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;pre&gt;&lt;code&gt;width: 1000px;&#xD;&#xA;font-size: 16px;&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;                    &lt;p&gt;&#xD;&#xA;                        Абсолютные значения обладают &#xD;&#xA;                        преимуществом в том, что они &#xD;&#xA;                        представляют собой конечные, понятные и &#xD;&#xA;                        легко воспринимаемые величины.&#xD;&#xA;                    &lt;/p&gt;&#xD;&#xA;                    &lt;h3&gt;Относительные значения&lt;/h3&gt;&#xD;&#xA;                    &lt;p&gt;&#xD;&#xA;                        Величину относительных зачений сразу и не &#xD;&#xA;                        представишь, сначала нужно узнать предидущее &#xD;&#xA;                        значение потом перемножить его &#xD;&#xA;                        и уже после этого идет вывод. &#xD;&#xA;                    &lt;/p&gt;&#xD;&#xA;                    &lt;p&gt;&#xD;&#xA;                        Относительные значения, &#xD;&#xA;                        в отличие от абсолютных, &#xD;&#xA;                        представляют собой более сложный тип, &#xD;&#xA;                        поскольку они не являются &#xD;&#xA;                        конечными или фиксированными, &#xD;&#xA;                        а зависят от других величин. &#xD;&#xA;                    &lt;/p&gt;</description>
    </item>
    <item>
      <title>Вложенность селекторов в CSS</title>
      <link>http://localhost:1313/vlojennost_selectorov_v_css/</link>
      <pubDate>Sun, 06 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/vlojennost_selectorov_v_css/</guid>
      <description>&lt;h3&gt;Вложенный или контекстный селектор в CSS&lt;/h3&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Тип обращений который представляет &#xD;&#xA;                            собой комбинацию двух селекторов, &#xD;&#xA;                            разделенных пробелом. &#xD;&#xA;                            Такие селекторы известны как &#xD;&#xA;                            вложенные или контекстные и интерпретируются &#xD;&#xA;                            справа налево. &#xD;&#xA;                            Важно отметить, что эти ссылки могут &#xD;&#xA;                            находиться как непосредственно внутри &#xD;&#xA;                            тегов с указанным классом, так и внутри вложенных &#xD;&#xA;                            тегов на любом уровне глубины.&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;pre&gt;&lt;code&gt;.nav__list a { &amp;lsaquo; Обращение к тегу a внутри класса .nav__list    &#xD;&#xA;  font-size: 16px;&#xD;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            С помощью пробела можно комбинировать &#xD;&#xA;                            любые типы селекторов. &#xD;&#xA;                            В данном примере селектор выбирает &#xD;&#xA;                            все элементы с классом &#34;warning&#34;, &#xD;&#xA;                            которые находятся внутри элементов с классом &#34;text&#34;.&#xD;&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Команды для веток в GIT</title>
      <link>http://localhost:1313/git_branches/</link>
      <pubDate>Thu, 03 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/git_branches/</guid>
      <description>&lt;p&gt;&#xD;&#xA;                            В системе контроля версий Git постоянно приходится&#xD;&#xA;                            создавать и перемещаться по веткам, удалять и сливать. &#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Еще ветки в Git негласно называют бренчой. &#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Создадим ветку&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Команда создает ветку и сразу переключает на нее. &#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;pre&gt;&lt;code&gt;git switch --create [имя-ветки]&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Переключаемся между веток&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Команда перекинет на уже заранее созданную ветку.&#xD;&#xA;                            Для создания и переключения веток также можно &#xD;&#xA;                            использовать git checkout.&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;pre&gt;&lt;code&gt;git switch [имя ветки]&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Выведем список всех веток на локалке&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;pre&gt;&lt;code&gt;git branch&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Переименуем ветку&#xD;&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Первичная настройка Git</title>
      <link>http://localhost:1313/pervichnaya_nastroika_git/</link>
      <pubDate>Thu, 03 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/pervichnaya_nastroika_git/</guid>
      <description>&lt;p&gt;Укажем имя пользователя&lt;/p&gt;&#xA;&lt;p&gt;Задаёт имя пользователя, от которого будут идти коммиты. Нужно написать свои данные на&#xA;латинице. Если имя состоит из одного слова, кавычки можно не ставить.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Dxrkd3v&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Укажем почту&lt;/p&gt;&#xA;&lt;p&gt;Задаёт почту пользователя. Нужно указать тот адрес почты который зарегистрирован на&#xA;GitHub.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;dxrkd3v@mail.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Посмотрим внесенные изменения&lt;/p&gt;&#xA;&lt;p&gt;Параметры можно посмотреть и в файле с конфигом, но этот способ быстрее.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;работа-с-репозиторием&#34;&gt;Работа с репозиторием&lt;/h3&gt;&#xA;&lt;p&gt;Создадим новый репозиторий&lt;/p&gt;&#xA;&lt;p&gt;Инициализируем git&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;init&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Клонируем репозиторий с GitHub&lt;/p&gt;</description>
    </item>
    <item>
      <title>Селекторы в CSS</title>
      <link>http://localhost:1313/selectory_v_css/</link>
      <pubDate>Thu, 03 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/selectory_v_css/</guid>
      <description>&lt;p&gt;&#xD;&#xA;                            Лекция про селекторы, классы, id и  &#xD;&#xA;                            вложенность CSS правил в HTML Academy. &#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            CSS — это язык, который используется &#xD;&#xA;                            для оформления HTML-документов. &#xD;&#xA;                            Его синтаксис значительно проще, &#xD;&#xA;                            чем у HTML, так как в CSS отсутствуют &#xD;&#xA;                            сложные правила, связанные с вложенностью элементов. &#xD;&#xA;                            Фактически, CSS — это довольно &#34;плоский&#34; язык, &#xD;&#xA;                            где вложенность практически не используется. &#xD;&#xA;                            Типичный CSS-файл состоит из последовательности CSS-правил. &#xD;&#xA;                            Каждое CSS-правило включает в себя селектор и список &#xD;&#xA;                            свойств с соответствующими значениями. &#xD;&#xA;                            Вот пример простого CSS-правила:&#xD;&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Фон в CSS 2</title>
      <link>http://localhost:1313/background_v_css_2/</link>
      <pubDate>Mon, 30 Sep 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/background_v_css_2/</guid>
      <description>&lt;h2&gt;Форматы изображений&lt;/h2&gt;&#xD;&#xA;                        &lt;h3&gt;Формат JPEG&lt;/h3&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Формат JPEG отлично справляется с изображениями &#xD;&#xA;                            фотографий и картин, но не очень подходит для схем, &#xD;&#xA;                            чертежей, текста и графики.&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            При сохранении изображения в формате JPEG можно &#xD;&#xA;                            регулировать уровень качества. &#xD;&#xA;                            Если выбрать слишком низкий уровень, &#xD;&#xA;                            могут появиться артефакты.&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            JPEG не поддерживает прозрачность, поэтому изображение &#xD;&#xA;                            всегда будет прямоугольным. &#xD;&#xA;                            Чтобы имитировать прозрачность, &#xD;&#xA;                            можно в графическом редакторе установить &#xD;&#xA;                            фон изображения таким же, как у контейнера, &#xD;&#xA;                            в котором оно размещено.&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Используйте JPEG для размещения фотографий &#xD;&#xA;                            с оптимальным балансом между размером файла &#xD;&#xA;                            и качеством изображения.&#xD;&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Фон в CSS 1</title>
      <link>http://localhost:1313/background_v_css_1/</link>
      <pubDate>Sun, 29 Sep 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/background_v_css_1/</guid>
      <description>&lt;p&gt;&#xD;&#xA;              Фоновый цвет элемента в CSS устанавливается с использованием свойства&#xD;&#xA;              background-color.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              В CSS доступны различные способы определения цветов: шестнадцатеричный код (HEX), RGB&#xD;&#xA;              или RGBA форматы, а также использование предопределенных цветовых названий, таких как&#xD;&#xA;              red или green.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;body__main {&#xD;&#xA;  background-color: #ff0000;&#xD;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;h2&gt;Свойство background-image&lt;/h2&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Фоновое изображение можно установить с помощью CSS-свойства background-image. Для&#xD;&#xA;              этого используется следующий синтаксис:&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;body__main {&#xD;&#xA;  background-image: url(&#34;адрес-картинки&#34;);    &#xD;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Адрес изображения должен быть указан внутри функции url(&#34;...&#34;). Адреса фоновых&#xD;&#xA;              изображений аналогичны адресам обычных изображений. К элементу можно одновременно&#xD;&#xA;              применить и цвет фона, и фоновое изображение. В таком случае изображение будет&#xD;&#xA;              отображаться поверх фонового цвета.&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Оформление текста в CSS</title>
      <link>http://localhost:1313/oformlenie_texta_v_css/</link>
      <pubDate>Sat, 29 Jun 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/oformlenie_texta_v_css/</guid>
      <description>&lt;p&gt; Оформление текста с помощью CSS. Задание размера шрифтов, &#xD;&#xA;                            высоты строки, выравнивание, задание цвета и отступы текста. &lt;/p&gt;&#xD;&#xA;                        &lt;h2&gt; Свойство font-size  &lt;/h2&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            font-size и размер шрифтов. &#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Наиболее важный параметр текста, которым можно управлять, — это шрифт. &#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Выбор конкретного шрифта, его размера, начертания и насыщенности — &#xD;&#xA;                            все эти свойства мы рассмотрим последовательно. Размер шрифта регулируется свойством font-size, &#xD;&#xA;                            значение которого определяет желаемую высоту символа шрифта.&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Единицы измерения могут &#xD;&#xA;                            быть как абсолютными, так и относительными. &#xD;&#xA;                            Наиболее распространенной единицей измерения размера шрифта являются пиксели (px):&#xD;&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Switch / Case в JavaScript</title>
      <link>http://localhost:1313/switch_case_v_javascript/</link>
      <pubDate>Sun, 05 May 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/switch_case_v_javascript/</guid>
      <description>&lt;p&gt;&#xD;&#xA;                            Лекция про оператор Switch / Case в JavaScript c Udemy&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Другие языки программирования, помимо условной конструкции if, &#xD;&#xA;                            поддерживают оператор switch. Это специализированная альтернатива if, &#xD;&#xA;                            предназначенная для определенных сценариев. &#xD;&#xA;                            Она полезна, когда необходима цепочка if else для проверки на равенство. Например:&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;pre&gt;&lt;code&gt;if (status === &#39;processing&#39;) {&#xD;&#xA;// Делаем раз&#xD;&#xA;} else if (status === &#39;paid&#39;) {&#xD;&#xA;// Делаем два&#xD;&#xA;} else if (status === &#39;new&#39;) {&#xD;&#xA;// Делаем три&#xD;&#xA;} else {&#xD;&#xA;// Делаем четыре&#xD;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Одна из особенностей этой сложной проверки заключается в том, &#xD;&#xA;                            что каждая ветка зависит от значения переменной status. &#xD;&#xA;                            Оператор switch позволяет более кратко и выразительно записать этот код: &#xD;&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Тернарный оператор в JavaScript</title>
      <link>http://localhost:1313/ternarny_operator_v_javascript/</link>
      <pubDate>Thu, 02 May 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/ternarny_operator_v_javascript/</guid>
      <description>&lt;p&gt;&#xD;&#xA;                            Лекция про тернарный оператор в JavaScript c Udemy&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Возьмем функцию которая возвращает модуль переданного числа&#xD;&#xA;                        &lt;/p&gt;&#xD;&#xA;&lt;pre&gt;&lt;code&gt;const abs = (number) =&gt; {&#xD;&#xA;    if (number &gt;= 0) {&#xD;&#xA;        return number;&#xD;&#xA;    }&#xD;&#xA;return -number;&#xD;&#xA;};&#xD;&#xA;abs(10); // 10&#xD;&#xA;abs(-10); // 10&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;                        &lt;p&gt;&#xD;&#xA;                            Можно ли записать это более кратко? С использованием return &#34;ответ в зависимости от условия&#34;&#xD;&#xA;                            Для этого рядом с return должно быть выражение, но if это инструкция. &#xD;&#xA;                            В JavaScript есть выражение, аналогичное if-else, но при этом это выражение. Она называется тернарный оператор.&#xD;&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>if / else в JavaScript</title>
      <link>http://localhost:1313/if_else_v_javascript/</link>
      <pubDate>Mon, 25 Mar 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/if_else_v_javascript/</guid>
      <description>&lt;p&gt;Лекция про условные операторы в Udemy&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Конструкции условий дают возможность изменить ход работы программы в зависимости от&#xD;&#xA;              условий, которые проверяются. Благодаря им мы можем создавать сложные программы,&#xD;&#xA;              которые будут вести себя по-разному в различных сценариях.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;h3&gt;if&lt;/h3&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Давайте создадим пример функции, которая определяет тип предложения, переданного в&#xD;&#xA;              качестве аргумента. Изначально она будет различать обычные предложения от&#xD;&#xA;              вопросительных.&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;const getTypeOfSentence = (sentence) =&gt; {&#xD;&#xA;const lastChar = sentence[sentence.length - 1];&#xD;&#xA;if (lastChar === &#39;?&#39;) {&#xD;&#xA;  return &#39;question&#39;;&#xD;&#xA;}&#xD;&#xA;return &#39;general&#39;;&#xD;&#xA;};&#xD;&#xA;getTypeOfSentence(&#39;Hodor&#39;);  // general&#xD;&#xA;getTypeOfSentence(&#39;Hodor?&#39;); // question&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              &#34;if&#34; - это конструкция в языке программирования, которая контролирует&#xD;&#xA;              последовательность выполнения операций. Внутри скобок передается выражение-предикат,&#xD;&#xA;              за которым следует блок кода в фигурных скобках. Этот блок кода выполняется только в&#xD;&#xA;              случае если предикат равен true.&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Логические орераторы в JavaScript</title>
      <link>http://localhost:1313/logicheskie_operatory_v_javascript/</link>
      <pubDate>Tue, 05 Mar 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/logicheskie_operatory_v_javascript/</guid>
      <description>&lt;p&gt;Лекция про логические операторы c Udemy&lt;/p&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              Логические выражения на языке JavaScript могут быть объединены, для использования в&#xD;&#xA;              качестве проверки, например паролей. Возьмём к примеру проверку пароля при&#xD;&#xA;              регистрации. Если мы хотим чтобы пароль был не менее 8 символов и более 20 то функция&#xD;&#xA;              выполняющая такую проверку будет такой&#xD;&#xA;            &lt;/p&gt;&#xD;&#xA;            &lt;pre&gt;&lt;code&gt;const isStrongPassword = (password) =&gt; {&#xD;&#xA;const length = password.length;&#xD;&#xA;  return length &gt; 8 &amp;&amp; length &lt; 20;&#xD;&#xA;};&#xD;&#xA;isStrongPassword(&#39;qwerty&#39;); // false&#xD;&#xA;isStrongPassword(&#39;qwerty1234&#39;); // true&#xD;&#xA;isStrongPassword(&#39;zxcvbnmasdfghjkqwertyui&#39;); // false&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;            &lt;p&gt;&#xD;&#xA;              &amp;&amp; - означает «И». Все выражение считается истинным только в том случае, когда истинен&#xD;&#xA;              каждый операнд — и слева и справа. Иными словами, &amp;&amp; означает «и то, и другое».&#xD;&#xA;            &lt;/p&gt;</description>
    </item>
  </channel>
</rss>
